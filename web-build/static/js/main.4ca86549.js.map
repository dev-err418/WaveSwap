{"version":3,"file":"static/js/main.4ca86549.js","mappings":"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","sources":["src/appFeatures.js","src/Model.js","src/TokenList.js","src/constants.js","src/fetchPrice.js","src/addLiquidity.js","src/deployPool.js","src/SwapContext.js","src/NavBar.js","src/Token.js","src/SearchToken.js","src/SwapSection.js","src/Home.js","src/PoolAdd.js","src/PoolConnect.js","src/PoolsPage.js","src/TokensPage.js","App.js","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { USERSTORAGE_ADDRESS } from \"./constants\";\nimport USERSTORAGE_ABI from \"../abi/USERSTORAGE.json\"\nimport { ethers } from \"ethers\";\nimport Web3Modal from \"web3modal\";\n\nexport const checkIfWalletConnected = async () => {\n    try {\n        if (!window.ethereum) return console.log(\"Install metamask\")\n        const accounts = await window.ethereum.request({\n            method: \"eth_accounts\"\n        })\n        const firstAccount = accounts[0];\n        \n        return firstAccount;\n    } catch (err) {\n        console.log(\"error while checking wallet\", err)\n    }\n}\n\nexport const connectWallet = async() => {\n    try {\n        if (!window.ethereum) return console.log(\"Install metamask\")\n        const accounts = await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n        })\n        const firstAccount = accounts[0];\n\n        if (window.ethereum.networkVersion != 7701) {\n            return alert(\"Switch your network to CANTO testnet (7701) and reload the page.\");\n        }\n\n        window.location.reload();\n        return firstAccount;\n    } catch (err) {\n        console.log(\"error while connecting wallet\", err)\n    }\n}\n\n// export const fetchUserStorageContract = (signerOrProvider) => \n//     new ethers.Contract(\n//         USERSTORAGE_ADDRESS,\n//         USERSTORAGE_ABI,\n//         signerOrProvider\n//     )\n\n// export const connectingWithUserStorageContract = async () => {\n//     try {\n//         const web3modal = new Web3Modal();\n//         const connection = await web3modal.connect();\n//         const provider = new ethers.providers.Web3Provider(connection);\n//         const signer = provider.getSigner();\n//         const contract = fetchUserStorageContract(signer);\n\n//         return contract;\n//     } catch (err) {\n//         console.log(\"err in connectWirhUserStorageContract\", err);\n//     }\n// }\n\n","import { TouchableOpacity, View, Text } from \"react-native\";\nimport Icon from \"react-native-vector-icons/AntDesign\";\nimport { connectWallet } from \"./appFeatures\";\n\nexport const Model = ({setOpenModel, a}) => {\n    \n    const walletMenu = [\"Metamask\"]\n    \n    return (\n        <View style={{\n            position: \"fixed\", \n            display: \"flex\", \n            justifyContent: \"center\", \n            alignItems: \"center\", \n            width: \"100vw\", \n            height: \"100vh\",\n            padding: \"none\", \n            top: 0, \n            left: 0,\n            backgroundColor: \"rgba(25, 25, 25, 0.5)\",                                \n        }}>\n            <View style={{\n                backgroundColor: \"white\",\n                borderRadius: 15,\n                padding: 15,                 \n            }} >\n                <View style={{\n                    display:\"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",                    \n                }}>\n                    <Text style={{fontSize: 20, fontWeight: \"600\", marginBottom: 15}}>Connect a wallet</Text>\n                    <TouchableOpacity onPress={() => setOpenModel(false)}>\n                        <Icon name=\"close\" size={20} color=\"black\" />\n                    </TouchableOpacity>\n                </View>\n                <View style={{\n                    display: \"flex\",\n                    alignItems: \"center\"\n                }} >\n                    {walletMenu.map((el, i) => {\n                        return (\n                            <TouchableOpacity \n                                key={i} \n                                onPress={async () => {\n                                    await connectWallet();\n                                    setOpenModel(false);\n                                }}\n                                style={{\n                                    paddingVertical: 15,\n                                    borderRadius: 15,\n                                    width: \"calc(100%)\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    marginTop: 15,\n                                    backgroundColor: \"rgb(43,101,237)\",\n                                }}\n                            >\n                                <Text style={{color: \"white\"}}>\n                                    {el}\n                                </Text>                        \n                            </TouchableOpacity>\n                        )\n                    })}\n                </View>\n                <Text style={{marginTop: 15, textAlign: \"center\"}}>{`By connecting your wallet you become solely responsible\\nfor the actions you perform on WaveSwap.`}</Text>\n            </View>\n        </View>\n    )\n}","import { View, Text, TouchableOpacity } from \"react-native\";\nimport Icon from \"react-native-vector-icons/AntDesign\";\n\nexport const TokenList = ({ tokenData, setOpenTokenBox }) => {\n    return (\n        <View style={{\n            position: \"absolute\",\n            right: 0,\n            top: 60,\n            marginRight: 15,\n            backgroundColor: \"white\",\n            padding: 15,\n            borderRadius: 15,\n            shadowColor: \"#000\",\n            shadowOffset: {\n                width: 0,\n                height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n        }}>\n            <View\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    minWidth: 200,\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    marginBottom: 15\n                }}\n            >\n                <Text style={{fontSize: 20, fontWeight: \"600\" }}>Your token list</Text>\n                <TouchableOpacity onPress={() => setOpenTokenBox(false)}>                    \n                    <Icon name=\"close\" size={20} color=\"black\" />\n                </TouchableOpacity>\n            </View>\n            {\n                tokenData.map((el, i) => {\n                    return (\n                        <View\n                            key={i}\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"space-between\",\n                                alignItems: \"center\",\n                                marginTop: 10\n                            }}\n                        >\n                            <View style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }} >\n                                <Text\n                                    style={{\n                                        padding: 8,\n                                        backgroundColor: \"rgb(43,101,237)\",\n                                        borderRadius: 10,\n                                        color: \"white\"\n                                    }}\n                                >{el.symbol}</Text>\n                                <Text style={{ marginHorizontal: 15 }}>{Number(el.tokenBalance).toFixed(6)}</Text>\n                            </View>\n                            <Text style={{ color: \"rgb(43,101,237)\" }}>{el.name}</Text>\n                        </View>\n                    )\n                })\n            }\n\n        </View>\n    )\n}","export const MAINNET_URL = \"https://canto-testnet.plexnode.wtf\"; //\"https://eth-sepolia.g.alchemy.com/v2/D86FGA2fWaU2ATyNWU8OPANGeZV6NG4a\";\n\nexport const SWAP_ROUTER_ADDRESS = \"0xD51C75be4C264b48724F7913fa142b22b2A8D497\";\nexport const QUOTER_ADDRESS = \"0x362e18b27477566D318765D0582A3FF2596d84B0\";\nexport const QUOTER_V2_ADDRESS = \"0x0d18f4362011Fd0D32284C781689e1e4522ca4cE\";\nexport const FACOTRY_ADDRESS = \"0x574Cd7E160e22C9300302192b9009d0496189e0F\";\nexport const NON_FUNGIBLE_MANAGER = \"0xB519e47Eef3A2b1088E6f0E0d11657DC85385f24\";\nexport const NON_FUNGIBLE_DESCRIPTOR = \"0x011f56d5A6d83aC63d92F85C54f3a573aECEc500\";\nexport const WCANTO_ADDRESS = \"0xd6307DBAdc6398308307f5E60f2544220B48ba94\";\nexport const USERSTORAGE_ADDRESS = \"0x2cF49a83f2686b2D3452Ad4Fa5EFeeFE65209706\";\n","import { ethers, parseUnits, Contract } from \"ethers\";\nimport ERC20 from \"../abi/ERC20.json\";\nimport WETH9 from \"./WETH9.json\";\nimport { MAINNET_URL, QUOTER_ADDRESS, QUOTER_V2_ADDRESS, FACOTRY_ADDRESS, WCANTO_ADDRESS } from \"./constants\";\n\nconst { abi: FactoryABI} = require(\"@uniswap/v3-core/artifacts/contracts/UniswapV3Factory.sol/UniswapV3Factory.json\")\nconst { abi: UniswapV3PoolABI } = require(\"@uniswap/v3-core/artifacts/contracts/UniswapV3Pool.sol/UniswapV3Pool.json\");\nconst { abi: QuoterV2ABI } = require(\"@uniswap/v3-periphery/artifacts/contracts/lens/QuoterV2.sol/QuoterV2.json\");\n// const { getAbi, getPoolImmutables } = require(\"./priceHelpers\");\n\nconst sqrtToPrice = (sqrt, decimals0, decimals1, token0IsInput=true) => {\n    const numerator = sqrt ** 2;\n    const denominator = 2 ** 192;\n    let ratio = numerator / denominator;\n    const shiftDecimals = Math.pow(10, decimals0 - decimals1);\n    ratio = ratio * shiftDecimals;\n\n    return ratio;\n}\n\n// tokenA = from\n// tokenB = to\nexport const getOut = async (tokenA, tokenB, fee, amountIn) => {\n    const provider = new ethers.providers.JsonRpcProvider(MAINNET_URL);\n\n    var token0, token1;\n    if (tokenA > tokenB) {\n        token1 = tokenA;\n        token0 = tokenB;\n    } else {\n        token0 = tokenA;\n        token1 = tokenB;\n    }\n\n    const quoter = new Contract(\n        QUOTER_V2_ADDRESS,\n        QuoterV2ABI,\n        provider\n    );\n    \n    const params = {\n        tokenIn: tokenA,\n        tokenOut: tokenB,\n        fee: fee,\n        amountIn: amountIn,\n        sqrtPriceLimitX96: 0\n    }\n\n    const quotedOut = await quoter.callStatic.quoteExactInputSingle(params);\n\n    // const factory = new ethers.Contract(\n    //     FACOTRY_ADDRESS,\n    //     FactoryABI,\n    //     provider\n    // );\n\n    // const poolAddress = await factory.connect(provider).getPool(tokenA, tokenB, fee);\n    \n    // const poolContract = new ethers.Contract(\n    //     poolAddress,\n    //     UniswapV3PoolABI,\n    //     provider\n    // );\n\n    // const slot0 = await poolContract.slot0();\n    // const sqrtPriceX96 = slot0.sqrtPriceX96;\n\n    // const sqrtPriceX96After = quotedOut.sqrtPriceX96After;\n\n    // const token0IsInput = tokenA === token0;    \n\n    // const price = sqrtToPrice(sqrtPriceX96, 18, 18, token0IsInput);\n    // const priceNext = sqrtToPrice(sqrtPriceX96After, 18, 18, token0IsInput);\n\n    // console.log(sqrtPriceX96.toString(), sqrtPriceX96After.toString(), price, priceNext);\n\n\n    \n    \n\n\n    return quotedOut.amountOut;\n}","import Web3Modal from \"web3modal\";\nimport { ethers } from \"ethers\";\nimport { Token } from \"@uniswap/sdk-core\";\nimport { Pool, Position, nearestUsableTick } from \"@uniswap/v3-sdk\";\nimport { NON_FUNGIBLE_MANAGER } from \"./constants\"\n\nconst artifacts = {\n    NonfungiblePositionManager: require(\"@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json\"),\n    WETH9: require(\"./WETH9.json\"),\n    UniswapV3Pool: require(\"@uniswap/v3-core/artifacts/contracts/UniswapV3Pool.sol/UniswapV3Pool.json\"),\n}\n\nconst getPoolData = async (poolContract) => {\n    const [tickSpacing, fee, liquidity, slot0] = await Promise.all([\n        poolContract.tickSpacing(),\n        poolContract.fee(),\n        poolContract.liquidity(),\n        poolContract.slot0()\n    ])\n\n    return {\n        tickSpacing: tickSpacing,\n        fee: fee,\n        liquidity: liquidity,\n        sqrtPriceX96: slot0[0],\n        tick: slot0[1],       \n    }\n}\n\nexport const addLiquidityExternal = async (\n    tokenAddress1,\n    tokenAddress2,\n    poolAddress,\n    poolFee,\n    tokenAmount1,\n    tokenAmount2\n) => {\n    const web3modal = new Web3Modal();\n    const connection = await web3modal.connect();\n    const provider = new ethers.providers.Web3Provider(connection);\n    const signer = provider.getSigner();\n    const accountAddress = await signer.getAddress();\n\n    const token1Contract = new ethers.Contract(tokenAddress1, artifacts.WETH9.abi, provider);\n    const token2Contract = new ethers.Contract(tokenAddress2, artifacts.WETH9.abi, provider);\n\n    await token1Contract.connect(signer).approve(NON_FUNGIBLE_MANAGER, ethers.utils.parseEther(tokenAmount1.toString()));\n    await token2Contract.connect(signer).approve(NON_FUNGIBLE_MANAGER, ethers.utils.parseEther(tokenAmount2.toString()));\n\n    const poolContract = new ethers.Contract(\n        poolAddress,\n        artifacts.UniswapV3Pool.abi,\n        provider\n    );\n\n    const { chainId } = await provider.getNetwork();\n\n    const token1Name = await token1Contract.name();\n    const token1Symbol = await token1Contract.symbol();\n    const token1Decimal = await token1Contract.decimals();\n    const token1Address = token1Contract.address;\n    \n    const token2Name = await token2Contract.name();\n    const token2Symbol = await token2Contract.symbol();\n    const token2Decimal = await token2Contract.decimals();\n    const token2Address = token2Contract.address;\n\n    const tokenA = new Token(\n        chainId,\n        token1Address, \n        token1Decimal,\n        token1Name,\n        token1Symbol\n    );\n\n    const tokenB = new Token(\n        chainId,\n        token2Address, \n        token2Decimal,\n        token2Name,\n        token2Symbol\n    );\n\n    const poolData = await getPoolData(poolContract);\n    console.log(poolData);\n\n    const pool = new Pool(\n        tokenA,\n        tokenB,\n        poolData.fee,\n        poolData.sqrtPriceX96.toString(),\n        poolData.liquidity.toString(),\n        poolData.tick\n    );\n\n    const position = new Position({\n        pool: pool,\n        liquidity: ethers.utils.parseEther(\"1\"),\n        tickLower: nearestUsableTick(poolData.tick, poolData.tickSpacing) - poolData.tickSpacing * 2,\n        tickUpper: nearestUsableTick(poolData.tick, poolData.tickSpacing) + poolData.tickSpacing * 2,        \n    });\n\n    const { amount0: amount0Desired, amount1: amount1Desired } = position.mintAmounts;\n\n    const params = {\n        token0: token1Address,\n        token1: token2Address,\n        fee: poolData.fee,\n        tickLower: nearestUsableTick(poolData.tick, poolData.tickSpacing) - poolData.tickSpacing * 2,\n        tickUpper: nearestUsableTick(poolData.tick, poolData.tickSpacing) + poolData.tickSpacing * 2,  \n        amount0Desired: amount0Desired.toString(),\n        amount1Desired: amount1Desired.toString(),\n        amount0Min: 0,\n        amount1Min: 0,\n        recipient: accountAddress,\n        deadline: Math.floor(Date.now() / 1000) + 60 * 10 //10 MIN make this active\n    };\n\n    const nonfungiblePositionManager = new ethers.Contract(\n        NON_FUNGIBLE_MANAGER,\n        artifacts.NonfungiblePositionManager.abi,\n        provider\n    );\n\n    const tx = await nonfungiblePositionManager.connect(signer).mint(\n        params,\n        {\n            gasLimit: \"1000000\"\n        }\n    );\n    console.log(\"tx sent\");\n\n    const receipt = await tx.wait();\n    console.log(receipt);\n\n    if (receipt) {\n        alert(`Transaction succeed ! Hash : ${receipt[\"transactionHash\"]}`);\n    }\n    \n    return receipt;\n}","import {ethers} from \"ethers\";\nimport Web3Modal from \"web3modal\";\nimport bn from \"bignumber.js\"\nimport { FACOTRY_ADDRESS, NON_FUNGIBLE_MANAGER } from \"./constants\"\n\nbn.config({ EXPONENTIAL_AT: 999999, DECIMAL_PLACES: 40 });\n\nconst artifacts = {\n    UniswapV3Factory: require(\"@uniswap/v3-core/artifacts/contracts/UniswapV3Factory.sol/UniswapV3Factory.json\"),\n    NonfungiblePositionManager: require(\"@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json\"),\n}\n\nexport const fetchPoolContract = (signerOrProvider) => \n    new ethers.Contract(\n        FACOTRY_ADDRESS,\n         artifacts.UniswapV3Factory.abi,\n         signerOrProvider\n    )\n\nexport const fetchPositionContract = (signerOrProvider) => \n    new ethers.Contract(\n        NON_FUNGIBLE_MANAGER,\n        artifacts.NonfungiblePositionManager.abi,\n        signerOrProvider\n    )\n\nconst encodePriceSqrt = (reserve1, reserve0) => {\n    return ethers.BigNumber.from(\n        new bn(reserve1.toString())\n            .div(reserve0.toString())\n            .sqrt()\n            .multipliedBy(new bn(2).pow(96))\n            .integerValue(3)\n            .toString()\n    )\n}\n\nexport const connectingWithPoolContract = async (address1, address2, fee, tokenFee1, tokenFee2) => {\n    const web3modal = new Web3Modal();\n    const connection = await web3modal.connect();\n    const provider = new ethers.providers.Web3Provider(connection);\n    const signer = provider.getSigner();\n\n    console.log(signer);\n\n    const createPoolContract = fetchPositionContract(signer);\n    const price = encodePriceSqrt(tokenFee1, tokenFee2);\n    console.log(price);\n    const transaction = await createPoolContract()\n        .connect(signer)\n        .createAndInitializePoolIfNecessary(address1, address2, fee, price, {\n            gasLimit: 30000000\n        })\n\n    await transaction.wait();\n\n    const factory = fetchPoolContract(signer);\n    const poolAddress = await factory.getPool(address1, address2, fee);\n\n    return poolAddress;\n}","import { View, Text } from \"react-native\";\nimport { useState, useEffect, createContext } from \"react\";\nimport { ethers } from \"ethers\";\nimport Web3Modal from \"web3modal\";\nimport { checkIfWalletConnected, connectingWithUserStorageContract } from \"./appFeatures\";\nimport ERC20 from \"../abi/ERC20.json\";\nimport WETH9 from \"./WETH9.json\"\nimport { FACOTRY_ADDRESS, MAINNET_URL, NON_FUNGIBLE_MANAGER, SWAP_ROUTER_ADDRESS, WCANTO_ADDRESS } from \"./constants\";\nimport SwapRouter from \"@uniswap/v3-periphery/artifacts/contracts/SwapRouter.sol/SwapRouter.json\"\n\nimport { getOut, getPrice } from \"./fetchPrice\";\nimport { addLiquidityExternal } from \"./addLiquidity\";\nimport { connectingWithPoolContract } from \"./deployPool\";\n\nexport const SwapTokenContext = createContext()\n\nexport const SwapTokenContextProvider = ({ children }) => {\n\n    const [account, setAccount] = useState(\"\")\n    const [ether, setEther] = useState(\"\")\n    const [networkConnect, setNetworkConnect] = useState(\"\");\n    const [tokenData, setTokenData] = useState([]);\n    const [poolPositions, setPoolPositions] = useState([]);    \n\n    const [getAllLiquidity, setGetAllLiquidity] = useState([]);\n\n    // tokens addresses\n    const addToken = [\n        // \"0x826551890Dc65655a0Aceca109aB11AbDbD7a07B\", // WCANTO\n        // \"0x80b5a32e4f032b2a058b4f29ec95eefeeb87adcd\", // USDC \n        // \"0xeceeefcee421d8062ef8d6b4d814efe4dc898265\", // ATOM\n        // \"0x4e71a2e537b7f9d9413d3991d37958c0b5e1e503\", // NOTE\n        // \"0x5FD55A1B9FC24967C4dB09C513C3BA0DFa7FF687\", // ETH\n        // \"0xd567B3d7B8FE3C79a1AD8dA978812cfC4Fa05e75\" // USDT\n\n        \"0x379a16dcBA59bb9bB8244C75e4E1FC8f554A720E\", // Usdc (testnet)\n        \"0xB1F0b69976Cd7EA7e181E07827872738Ba1Eb7D3\", // Note (testnet)\n        \"0xd6307DBAdc6398308307f5E60f2544220B48ba94\" // Wcanto (testnet)\n\n    ]\n\n    const checkBalances = async () => {\n        const userAccount = await checkIfWalletConnected();\n        setAccount(userAccount);\n        const provider = new ethers.providers.JsonRpcProvider(MAINNET_URL);\n        const balance = await provider.getBalance(userAccount);\n        setEther(ethers.utils.formatEther(balance));\n\n        addToken.map(async (el, i) => {\n            const contract = new ethers.Contract(el, ERC20, provider);\n            const userBalance = await contract.balanceOf(userAccount);\n            const convertTokenBal = ethers.utils.formatEther(userBalance);\n            const index = tokenData.findIndex(p => p.tokenAddress.toLowerCase() == el.toLowerCase());\n            tokenData[index][\"tokenBalance\"] = convertTokenBal;\n        })\n    }\n\n    const fetchingData = async () => {\n        try {\n            const userAccount = await checkIfWalletConnected();\n            setAccount(userAccount);\n            const provider = new ethers.providers.JsonRpcProvider(MAINNET_URL);\n            const balance = await provider.getBalance(userAccount);\n            const network = await provider.getNetwork();\n            setNetworkConnect(network.name);\n            setEther(ethers.utils.formatEther(balance));\n\n            addToken.map(async (el, i) => {\n                const contract = new ethers.Contract(el, ERC20, provider);\n                const userBalance = await contract.balanceOf(userAccount);\n                const convertTokenBal = ethers.utils.formatEther(userBalance);\n                const symbol = await contract.symbol();\n                const name = await contract.name();\n                console.log(symbol, name, convertTokenBal);\n\n                tokenData.push({\n                    name: symbol == \"WETH\" ? \"Wrapped Canto\" : name,\n                    symbol: symbol == \"WETH\" ? \"WCANTO\" : symbol,\n                    tokenBalance: convertTokenBal,\n                    tokenAddress: el,\n                })\n            })\n        } catch (err) {\n            console.log(\"error while fetching data\", err);\n        }\n    }\n\n    const wrapEth = async (amount) => {\n        try {\n            const web3modal = new Web3Modal();\n            const connection = await web3modal.connect();\n            const provider = new ethers.providers.Web3Provider(connection);\n            const signer = provider.getSigner();\n            // const accountAddress = await signer.getAddress();   \n\n            const weth = new ethers.Contract(\n                WCANTO_ADDRESS,\n                WETH9.abi,\n                provider\n            );\n\n            const deposit = await weth.connect(signer).deposit(\n                {\n                    gasLimit: 1000000,\n                    value: ethers.utils.parseEther(amount)\n                }\n            );\n\n            const tx = await deposit.wait();\n            console.log(tx)\n            alert(`Transaction succeeded, hash: ${tx.transactionHash}`)\n            await checkBalances();\n        } catch (err) {\n            console.log(\"error while wrapping canto\", err)\n        }\n    }\n\n    const unwrapEth = async (amount) => {\n        try {\n            const web3modal = new Web3Modal();\n            const connection = await web3modal.connect();\n            const provider = new ethers.providers.Web3Provider(connection);\n            const signer = provider.getSigner();\n\n            const weth = new ethers.Contract(\n                WCANTO_ADDRESS,\n                WETH9.abi,\n                provider\n            );\n\n            const withdraw = await weth.connect(signer).withdraw(\n                ethers.utils.parseEther(amount),\n                {\n                    gasLimit: 1000000,\n                }\n            );\n\n            const tx = await withdraw.wait();\n            console.log(tx)\n            alert(`Transaction succeeded, hash: ${tx.transactionHash}`);\n            await checkBalances();\n        } catch (err) {\n            console.log(\"error while unwrapping canto\", err)\n        }\n    }\n\n    const singleSwapFromEth = async (token2, swapAmount, slippage, deadline, fee) => {\n        const web3modal = new Web3Modal();\n        const connection = await web3modal.connect();\n        const provider = new ethers.providers.Web3Provider(connection);\n        const signer = provider.getSigner();\n        const accountAddress = await signer.getAddress();\n\n        const swaprouter = new ethers.Contract(\n            SWAP_ROUTER_ADDRESS,\n            SwapRouter.abi,\n            provider\n        );\n\n        const out = await getOut(WCANTO_ADDRESS, token2, fee, ethers.utils.parseEther(swapAmount));\n        const a = ethers.FixedNumber.from(slippage);\n        const b = ethers.FixedNumber.from(100);\n        const c = ethers.FixedNumber.from(1).subUnsafe(a.divUnsafe(b))\n        const d = ethers.BigNumber.from(c);\n        const e = ethers.BigNumber.from(out).mul(d);\n\n        const params = {\n            tokenIn: WCANTO_ADDRESS,\n            tokenOut: token2,\n            fee: fee,\n            recipient: accountAddress,\n            deadline: Math.floor(Date.now() / 1000) + (60 * deadline),\n            amountIn: ethers.utils.parseEther(swapAmount),\n            amountOutMinimum: 0,\n            sqrtPriceLimitX96: 0\n        }\n\n        const data = swaprouter.interface.encodeFunctionData(\"exactInputSingle\", [params]);\n\n        const txArgs = {\n            to: SWAP_ROUTER_ADDRESS,\n            from: accountAddress,\n            data: data,\n            value: ethers.utils.parseEther(swapAmount),\n            gasLimit: \"1000000\"\n        }\n\n        const tx = await signer.sendTransaction(txArgs);\n        const reciept = await tx.wait()\n        alert(`Transaction succeeded, hash: ${reciept.transactionHash}`);\n        await checkBalances();\n    }\n\n    const singleSwapToken = async (token1, token2, swapAmount, slippage, deadline, fee) => {\n        console.log(token1, token2, swapAmount, slippage, deadline, fee);\n        try {\n            const web3modal = new Web3Modal();\n            const connection = await web3modal.connect();\n            const provider = new ethers.providers.Web3Provider(connection);\n            const signer = provider.getSigner();\n            const accountAddress = await signer.getAddress();\n\n            const swaprouter = new ethers.Contract(\n                SWAP_ROUTER_ADDRESS,\n                SwapRouter.abi,\n                provider\n            );\n\n            const token = new ethers.Contract(\n                token1,\n                ERC20,\n                provider\n            );\n\n\n            const out = await getOut(token1, token2, fee, ethers.utils.parseEther(swapAmount));\n            const a = ethers.FixedNumber.from(slippage);\n            const b = ethers.FixedNumber.from(100);\n            const c = ethers.FixedNumber.from(1).subUnsafe(a.divUnsafe(b))\n            const d = ethers.BigNumber.from(c);\n            const e = ethers.BigNumber.from(out).mul(d);\n\n            const params = {\n                tokenIn: token1,\n                tokenOut: token2,\n                fee: fee,\n                recipient: accountAddress,\n                deadline: Math.floor(Date.now() / 1000) + (60 * deadline),\n                amountIn: ethers.utils.parseEther(swapAmount),\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            }\n\n\n            const approvalResp = await token.connect(signer).approve(\n                SWAP_ROUTER_ADDRESS,\n                ethers.utils.parseEther(swapAmount)\n            );\n\n            console.log(approvalResp)\n            console.log(params)\n\n\n            const transaction = await swaprouter.connect(signer).exactInputSingle(\n                params,\n                {\n                    gasLimit: 2000000\n                }\n            );\n\n            console.log(transaction)\n\n            const tx = await transaction.wait();\n            console.log(tx);\n            alert(`Transaction succeeded, hash: ${tx.transactionHash}`);\n\n            await checkBalances();\n\n        } catch (err) {\n            console.log(\"error while single swapping\", err);\n        }\n    }\n\n    useEffect(() => {\n        fetchingData();\n    }, [])\n\n\n    return (\n        <SwapTokenContext.Provider value={{ account, networkConnect, ether, tokenData, singleSwapToken, wrapEth, unwrapEth, singleSwapFromEth, checkBalances }}>\n            {children}\n        </SwapTokenContext.Provider>\n    )\n}\n\n\n\n\n\n// {\n//     \"hash\": \"0x6802d710b8c5b74782810699ed77ac1e62fa74823fd7f455701f7bf1859591dc\",\n//     \"type\": 2,\n//     \"accessList\": null,\n//     \"blockHash\": null,\n//     \"blockNumber\": null,\n//     \"transactionIndex\": null,\n//     \"confirmations\": 0,\n//     \"from\": \"0x8F4AB0bD3586EdD445e4e6cD75FC0bcE9e3dD0C0\",\n//     \"gasPrice\": {\n//         \"type\": \"BigNumber\",\n//         \"hex\": \"0x01238103e800\"\n//     },\n//     \"maxPriorityFeePerGas\": {\n//         \"type\": \"BigNumber\",\n//         \"hex\": \"0x77359400\"\n//     },\n//     \"maxFeePerGas\": {\n//         \"type\": \"BigNumber\",\n//         \"hex\": \"0x01238103e800\"\n//     },\n//     \"gasLimit\": {\n//         \"type\": \"BigNumber\",\n//         \"hex\": \"0x1e8480\"\n//     },\n//     \"to\": \"0xD51C75be4C264b48724F7913fa142b22b2A8D497\",\n//     \"value\": {\n//         \"type\": \"BigNumber\",\n//         \"hex\": \"0x00\"\n//     },\n//     \"nonce\": 209,\n//     \"data\": \"0x414bf389000000000000000000000000d6307dbadc6398308307f5e60f2544220b48ba94000000000000000000000000b1f0b69976cd7ea7e181e07827872738ba1eb7d300000000000000000000000000000000000000000000000000000000000001f40000000000000000000000008f4ab0bd3586edd445e4e6cd75fc0bce9e3dd0c000000000000000000000000000000000000000000000000000000000642863a30000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n//     \"r\": \"0x2e55a50b043ea330c8894c19e43f39188339323653aaabb6926709adc17fc8cc\",\n//     \"s\": \"0x1205e0a2a491027d401545c9d8ae4d66e08827ebe4cd6a880751f2289b7a7e72\",\n//     \"v\": 1,\n//     \"creates\": null,\n//     \"chainId\": 0\n// }\n\n\n\n////////////\n\n\n\n// {\n//     \"hash\": \"0x3298c949ce219490b3db0cf3e4b9d82c1f13f7f95c897d0ee04348dc8cabf016\",\n//     \"type\": 2,\n//     \"accessList\": null,\n//     \"blockHash\": null,\n//     \"blockNumber\": null,\n//     \"transactionIndex\": null,\n//     \"confirmations\": 0,\n//     \"from\": \"0x8F4AB0bD3586EdD445e4e6cD75FC0bcE9e3dD0C0\",\n//     \"gasPrice\": {\n//         \"type\": \"BigNumber\",\n//         \"hex\": \"0x01238103e800\"\n//     },\n//     \"maxPriorityFeePerGas\": {\n//         \"type\": \"BigNumber\",\n//         \"hex\": \"0x77359400\"\n//     },\n//     \"maxFeePerGas\": {\n//         \"type\": \"BigNumber\",\n//         \"hex\": \"0x01238103e800\"\n//     },\n//     \"gasLimit\": {\n//         \"type\": \"BigNumber\",\n//         \"hex\": \"0x1e8480\"\n//     },\n//     \"to\": \"0xD51C75be4C264b48724F7913fa142b22b2A8D497\",\n//     \"value\": {\n//         \"type\": \"BigNumber\",\n//         \"hex\": \"0x00\"\n//     },\n//     \"nonce\": 211,\n//     \"data\": \"0x414bf389000000000000000000000000379a16dcba59bb9bb8244c75e4e1fc8f554a720e000000000000000000000000b1f0b69976cd7ea7e181e07827872738ba1eb7d300000000000000000000000000000000000000000000000000000000000001f40000000000000000000000008f4ab0bd3586edd445e4e6cd75fc0bce9e3dd0c000000000000000000000000000000000000000000000000000000000642863e80000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n//     \"r\": \"0x4548e6ef329089ce07e33241a86696d69f8189a7ac4c251efd83d6f3d48672c1\",\n//     \"s\": \"0x0220126cca6540a4d72a0a90d787bd0b1bbe758428574212f702a68160b2905a\",\n//     \"v\": 1,\n//     \"creates\": null,\n//     \"chainId\": 0\n// }","import { View, Text, TextInput, TouchableOpacity, Dimensions } from \"react-native\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useNavigation } from '@react-navigation/native';\n\nimport { Model } from \"./Model\";\nimport { TokenList } from \"./TokenList\";\nimport { SwapTokenContext } from \"./SwapContext\";\n\nexport const NavBar = ({openModel, setOpenModel, openTokenBox, setOpenTokenBox, current}) => {\n    const menuItems = [\n        {\n            name: \"Swap\",\n            link: \"/\"\n        },\n        {\n            name: \"Tokens\",\n            link: \"/\"\n        },\n        {\n            name: \"Pools\",\n            link: \"/\"\n        }\n    ]      \n    \n    const navigation = useNavigation()\n    const { ether, account, networkConnect, connectWallet, tokenData } = useContext(SwapTokenContext)\n\n    const {width} = Dimensions.get(\"window\")\n\n    return (\n        <View style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            width: \"100vw\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            marginTop: 15,\n            paddingHorizontal: 15,            \n        }} >\n            {\n                width < 500 ? <Text></Text> : <Text style={{fontWeight: \"800\", fontSize: 22, color: \"rgb(43,101,237)\"}}>WaveSwap</Text>\n            }\n            <View style={{\n                display: \"flex\",\n                flexDirection: \"row\",  \n                paddingHorizontal: 2,\n                paddingVertical: 2,\n                borderRadius: 15,\n                borderColor: \"rgb(43,101,237)\",\n                borderWidth: 1,  \n                position: \"absolute\",\n                left: \"50vw\",\n                transform: \"translateX(-50%)\",\n            }}>                \n                {\n                    menuItems.map((el, i) => {                        \n                        return (\n                            <TouchableOpacity \n                                key={i}\n                                style={{\n                                    paddingHorizontal: 13,\n                                    paddingVertical: 13,\n                                    borderRadius: 15,\n                                    backgroundColor: current == i ? \"rgb(43,101,237)\" : \"none\"\n                                }}\n                                onPress={() => navigation.navigate(el.name)}\n                            >\n                                <Text style={{color: current == i ? \"white\" : \"black\"}}>{el.name}</Text>\n                            </TouchableOpacity>\n                        )\n                    })\n                }\n            </View>\n            <View \n                style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\"\n                }}\n            >\n                {\n                    width > 750 ?\n                    <Text style={{ marginRight: 10, fontWeight: \"600\", color: \"rgb(43,101,237)\" }} >{Number(ether).toFixed(4)} CANTO</Text> : null\n                }\n                <TouchableOpacity \n                    onPress={() => {\n                        if (!account) {\n                            setOpenModel(true);\n                        } else {\n                            setOpenTokenBox(!openTokenBox);\n                        }\n                    }}                 \n                    style={{ \n                        borderRadius: 15,\n                        backgroundColor: \"rgb(43,101,237)\",\n                        padding: 15\n                    }}\n                >\n                    <Text style={{color: \"white\"}}>{account ? String(account).substring(0,7) + \"...\" + String(account).slice(-3) : \"Connect\"}</Text>\n                </TouchableOpacity>\n            </View>\n            {\n                openModel && (\n                    <Model setOpenModel={setOpenModel} connectWallet={connectWallet} />\n                )\n            }\n            {\n                openTokenBox && (\n                    <TokenList tokenData={tokenData} setOpenTokenBox={setOpenTokenBox} />\n                )\n            }\n        </View>\n    )\n}","import { View, Text, TouchableOpacity, TextInput } from \"react-native\";\nimport Icon from \"react-native-vector-icons/AntDesign\";\n\nexport const Token = ({ setOpenSettings, slippage, setSlippage, deadline, setDeadline }) => {\n\n    const onChanged = (text, setToken, p) => {\n        let newText = '';\n        let numbers = '0123456789.';\n        if (!p) {\n            numbers = '0123456789'\n        }\n        let gotPoint = false;\n    \n        for (var i=0; i < text.length; i++) {\n            if(numbers.indexOf(text[i]) > -1) {\n                if (!gotPoint || text[i] != \".\") {\n                    newText = newText + text[i];   \n                }\n                if (text[i] == \".\") {\n                    gotPoint = true;\n                }                                                                             \n            }\n        }\n        setToken(newText);\n    }\n\n    return (\n        <View\n            style={{\n                position: \"fixed\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                width: \"100vw\",\n                height: \"100vh\",\n                padding: \"none\",\n                top: 0,\n                left: 0,\n                backgroundColor: \"rgba(25, 25, 25, 0.5)\",\n            }}\n        >\n            <View style={{\n                position: \"absolute\",\n                backgroundColor: \"white\",\n                width: 300,\n                borderRadius: 15,\n                padding: 15,\n\n            }} >\n                <View style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\"\n                }}>\n                    <Text style={{fontSize: 20, fontWeight: \"600\", marginBottom: 15}} >Settings</Text>\n                    <TouchableOpacity onPress={() => setOpenSettings(false)}>\n                        <Icon name=\"close\" size={20} color=\"black\" />\n                    </TouchableOpacity>\n                </View>\n                <Text>Slippage tolerence</Text>\n                <View style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    marginTop: 10\n                }} >\n                    <Text></Text>\n                    <TouchableOpacity style={{\n                        padding: 8,\n                        borderRadius: 10,\n                        backgroundColor: \"rgb(43,101,237)\",\n                    }}>\n                        <Text style={{ color: \"white\" }}>Slippage</Text>\n                    </TouchableOpacity>\n                    <TextInput\n                        value={slippage + \" %\"}\n                        onChange={(e) => onChanged(e.nativeEvent.text, setSlippage, true)}\n                        style={{\n                            borderRadius: 10,\n                            borderColor: \"rgb(43,101,237)\",\n                            borderWidth: 1,\n                            paddingLeft: 10,\n                            marginLeft: 5,\n                            width: \"100%\"\n                        }}\n                    />\n                </View>\n                <View style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    marginTop: 10\n                }}>\n                    <TextInput\n                        value={deadline + \" min\"}\n                        onChange={(e) => onChanged(e.nativeEvent.text, setDeadline, false)}                        \n                        style={{\n                            borderRadius: 10,\n                            borderColor: \"rgb(43,101,237)\",\n                            borderWidth: 1,\n                            paddingRight: 10,\n                            marginRight: 5,\n                            textAlign: \"right\",\n                            width: \"100%\"\n                        }}\n                    />\n                    <TouchableOpacity style={{\n                        padding: 8,\n                        borderRadius: 10,\n                        backgroundColor: \"rgb(43,101,237)\",\n                    }}>\n                        <Text style={{color: \"white\"}}>deadline</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </View>\n    )\n}","import { View, Text, TouchableOpacity, TextInput } from \"react-native\";\nimport { useEffect, useState } from \"react\"\nimport Icon from \"react-native-vector-icons/AntDesign\";\n\nexport const SearchToken = ({ openToken, tokens, token, tokenData, bannedAddresses, hideCanto=false}) => {\n    \n    const [allTokens, setAllTokens] = useState([])\n\n    useEffect(() => {\n        if (!hideCanto) {        \n            const a = tokenData.concat({\n                symbol: \"CANTO\",\n                name: \"Canto\",\n                tokenBalance: \"\",\n                tokenAddress: \"CANTO\"\n            })\n            setAllTokens(a); \n        } else {\n            setAllTokens(tokenData);\n        }       \n    }, [])\n\n    return (\n        <View\n            style={{\n                position: \"fixed\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                width: \"100vw\",\n                height: \"100vh\",\n                padding: \"none\",\n                top: 0,\n                left: 0,\n                backgroundColor: \"rgba(25, 25, 25, 0.5)\",\n            }}\n        >\n            <View style={{\n                position: \"absolute\",\n                width: 400,\n                padding: 15,\n                backgroundColor: \"white\",\n                borderRadius: 15\n            }}>\n                <View style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    marginBottom: 15\n                }}>\n                    <Text style={{ fontSize: 20, fontWeight: \"600\" }}>Select a token</Text>\n                    <TouchableOpacity onPress={() => openToken(false)}>\n                        <Icon name=\"close\" size={20} color=\"black\" />\n                    </TouchableOpacity>\n                </View>\n                <TextInput \n                    style={{\n                        borderRadius: 10,\n                        borderColor: \"rgb(43,101,237)\",\n                        borderWidth: 1,\n                        paddingLeft: 10,                        \n                        width: \"100%\",\n                        outline: \"none\",\n                        height: 40,\n                        marginBottom: 15\n                    }}\n                    placeholder=\"Search token address\" \n                />\n                <View style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\"\n                }} >\n                    {allTokens.map((el, i) => {                    \n                        return (\n                            <TouchableOpacity\n                                disabled={bannedAddresses.includes(el.tokenAddress.toLowerCase()) ? true : false}\n                                onPress={() => {                                    \n                                    tokens({\n                                        name: el.symbol,\n                                        image: \"\",\n                                        balance: el.tokenBalance,\n                                        address: el.tokenAddress\n                                    });\n                                    openToken(false)\n                                }}\n                                key={i}\n                                style={{                                    \n                                    backgroundColor: token == el.tokenAddress.toLowerCase() ? \"rgb(43,101,237)\" : bannedAddresses.includes(el.tokenAddress.toLowerCase()) && el.tokenAddress.toLowerCase() != token? \"lightgray\" : \"white\",\n                                    borderColor: \"rgb(43,101,237)\",\n                                    borderWidth: token == el.tokenAddress.toLowerCase() ? 0 : 1,\n                                    borderRadius: 8,\n                                    padding: 8,\n                                    minWidth: (400 - 30) / 5 - 10,\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                }}\n                            >\n                                <Text style={{\n                                    color: token == el.tokenAddress.toLowerCase() ? \"white\" : \"black\",\n                                }}>{el.symbol}</Text>\n                            </TouchableOpacity>\n                        )\n                    })}\n                </View>\n            </View>\n        </View>\n    )\n}","import { View, Text, TouchableOpacity, TextInput, Image, Dimensions, ActivityIndicator } from \"react-native\";\nimport { useState, useEffect, useContext } from \"react\";\nimport {Token} from \"./Token\";\nimport { SearchToken } from \"./SearchToken\";\nimport { SwapTokenContext } from \"./SwapContext\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport Icon2 from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport { getOut } from \"./fetchPrice\";\nimport { ethers } from \"ethers\"\nimport { WCANTO_ADDRESS } from \"./constants\";\n\nexport const SwapSection = ({openModel, setOpenModel}) => {\n\n    const [openSettings, setOpenSettings] = useState(false);\n    const [openToken, setOpenToken] = useState(false);\n    const [openTokenTwo, setOpenTokenTwo] = useState(false);\n    const [firstLoad, setFirstLoad] = useState(false);\n    const [slippage, setSlippage] = useState(0.25);\n    const [deadline, setDeadline] = useState(10);\n    const [swapping, setSwapping] = useState(false);\n\n\n    const { connectWallet, ether, account, getPrice, tokenData, singleSwapToken, wrapEth, unwrapEth, singleSwapFromEth } = useContext(SwapTokenContext)\n\n    const [tokenOne, setTokenOne] = useState({\n        name: \"WCANTO\",\n        image: \"\",\n        address: \"0xd6307DBAdc6398308307f5E60f2544220B48ba94\",        \n        balance: 0\n    })\n    const [tokenTwo, setTokenTwo] = useState({\n        name: \"NOTE\",\n        image: \"\",\n        address: \"0xB1F0b69976Cd7EA7e181E07827872738Ba1Eb7D3\",\n        balance: 0\n    })\n\n    const [tokenOneInput, setTokenOneInput] = useState(\"1.0000\");\n    const [tokenTwoInput, setTokenTwoInput] = useState(\"0.0000\");\n    const [ownedTokenOne, setOwnedTokenOne] = useState(\"\");\n    const [ownedTokenTwo, setOwnedTokenTwo] = useState(\"\");\n    const [i1, setI1] = useState(0);\n    const [i2, setI2] = useState(0);\n\n    const getNewPrice = async () => {\n        if (tokenOne.address != \"CANTO\" && tokenTwo.address != \"CANTO\") {\n            if (Number(tokenOneInput) == 0) {\n                return setTokenTwoInput(\"0.0000\")\n            }        \n            const out = await getOut(tokenOne.address, tokenTwo.address, 500, ethers.utils.parseEther(tokenOneInput));                         \n            setTokenTwoInput(Number(ethers.utils.formatEther(out)).toFixed(4).toString())\n            setFirstLoad(true);\n        } else if (tokenOne.address == \"CANTO\" && tokenTwo.address != WCANTO_ADDRESS) {\n            const out = await getOut(WCANTO_ADDRESS, tokenTwo.address, 500, ethers.utils.parseEther(tokenOneInput));\n            setTokenTwoInput(Number(ethers.utils.formatEther(out)).toFixed(4).toString())\n            setFirstLoad(true);\n        } else if (tokenOne.address != WCANTO_ADDRESS && tokenTwo.address == \"CANTO\") {\n            const out = await getOut(tokenOne.address, WCANTO_ADDRESS, 500, ethers.utils.parseEther(tokenOneInput));\n            setTokenTwoInput(Number(ethers.utils.formatEther(out)).toFixed(4).toString())\n            setFirstLoad(true);\n        } else if ((tokenOne.address == \"CANTO\" && tokenTwo.address == WCANTO_ADDRESS) || (tokenOne.address == WCANTO_ADDRESS && tokenTwo.address == \"CANTO\")) {\n            setTokenTwoInput(tokenOneInput);\n        }\n    }\n\n    const checkBalances = () => {\n        if (tokenData.length == 3) {\n            var i1_ = tokenData.findIndex(function(token) {\n                return token.tokenAddress.toLowerCase() == tokenOne.address.toLowerCase();\n            });\n            var i2_ = tokenData.findIndex(function(token) {\n                return token.tokenAddress.toLowerCase() == tokenTwo.address.toLowerCase();\n            });                \n            if (i1 != -1) {                                    \n                setI1(i1_);\n            } else {                \n                setI1(-1);\n            }\n\n            if (i2 != -1) {                \n                setI2(i2_)\n            } else {                \n                setI2(-1);\n            }\n        } else {                \n            setTimeout(checkBalances, 500);\n        }\n    }\n\n    const checkBalancesAgain = () => {\n        // i1\n        if (i1 == -1) {\n            // tokenA is canto\n            // console.log(Number(ether).toFixed(4), ownedTokenOne);\n            // if (Number(ether).toFixed(4) == ownedTokenOne) {\n            //     // tokenA balance is same (did not change)\n            //     setTimeout(checkBalancesAgain, 500);\n            // } else {\n            //     // tokenA balance changed\n            //     setOwnedTokenOne(Number(ether).toFixed(4));\n            // }\n        } else {\n            // tokenA is not canto\n            if (Number(tokenData[i1].tokenBalance).toFixed(4) == ownedTokenOne) {\n                setTimeout(checkBalancesAgain, 500);\n            } else {\n                setOwnedTokenOne(Number(tokenData[i1].tokenBalance).toFixed(4));\n            }\n        }\n\n        if (i2 == -1) {\n            // tokenB is canto\n            // if (Number(ether).toFixed(4) == ownedTokenOne) {\n            //     // tokenA balance is same (did not change)\n            //     setTimeout(checkBalancesAgain, 500);\n            // } else {\n            //     // tokenA balance changed\n            //     setOwnedTokenTwo(Number(ether).toFixed(4));\n            // }\n        } else {\n            // tokenA is not canto\n            if (Number(tokenData[i2].tokenBalance).toFixed(4) == ownedTokenTwo) {\n                setTimeout(checkBalancesAgain, 500);\n            } else {\n                setOwnedTokenTwo(Number(tokenData[i2].tokenBalance).toFixed(4));\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (tokenData.length != 3) {\n            return\n        }\n        if (i1 != -1) {\n            setOwnedTokenOne(Number(tokenData[i1].tokenBalance).toFixed(4));\n        } else {\n            setOwnedTokenOne(Number(ether).toFixed(4))\n        }\n\n        if (i2 != -1) {\n            setOwnedTokenTwo(Number(tokenData[i2].tokenBalance).toFixed(4));\n        } else {\n            setOwnedTokenTwo(Number(ether).toFixed(4))\n        }\n    }, [i1, i2]);\n\n    useEffect(() => {        \n        getNewPrice();        \n        checkBalances();\n    }, [tokenOne.address, tokenTwo.address])\n\n    useEffect(() => {           \n        const timer = setTimeout(() => getNewPrice(), 1000);\n        return () => clearTimeout(timer);\n    }, [tokenOneInput, tokenTwoInput])\n\n    const onChanged = (text) => {\n        let newText = '';\n        let numbers = '0123456789.';\n        let gotPoint = false;\n    \n        for (var i=0; i < text.length; i++) {\n            if(numbers.indexOf(text[i]) > -1) {\n                if (!gotPoint || text[i] != \".\") {\n                    newText = newText + text[i];   \n                }\n                if (text[i] == \".\") {\n                    gotPoint = true;\n                }                                                                             \n            }\n        }\n        setTokenOneInput(newText);\n    }\n\n    const {width} = Dimensions.get(\"window\");\n\n    return (\n        <View style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"100vw\",\n            height: \"calc(100vh - 65px)\",\n            zIndex:  openModel ? -1 : 1           \n        }}>            \n            { width < 500 ? null : <Image source={require(\"../img/logo.png\")} style={{aspectRatio: 11/3, width: \"100vw\", position: \"fixed\", transform: \"translateY(-5vh)\"}} />}\n            <View style={{\n                backgroundColor: \"white\",\n                shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.25,\n                shadowRadius: 3.84,\n                elevation: 5,\n                width: 300,\n                borderTopRightRadius: 15,\n                borderTopLeftRadius: 15,\n                height: 180,\n                display: \"flex\",\n                justifyContent: \"center\"\n            }}>\n                <TouchableOpacity\n                    style={{\n                        position: \"absolute\",\n                        top: 15,\n                        right: 15\n                    }}\n                    onPress={() => setOpenSettings(true)}\n                >\n                    <Icon name=\"settings-outline\" size={25} color=\"black\" />\n                </TouchableOpacity>                \n                <TouchableOpacity \n                    onPress={() => setOpenToken(true)}\n                    style={{\n                        textAlign: \"center\",                        \n                    }}\n                >\n                    <Text style={{\n                        fontSize: 20,\n                        fontWeight: \"500\"\n                    }}>\n                        {tokenOne.name}\n                    </Text>\n                </TouchableOpacity>\n                <Text style={{textAlign: \"center\", fontSize: 12, color: \"rgb(43,101,237)\"}}>{ownedTokenOne ? i1 == -1 ? `(${Number(ether).toFixed(4)})` : `(${ownedTokenOne})` : \"\"}</Text>\n                <TextInput \n                    style={{\n                        outline: \"none\",\n                        fontSize: 35,\n                        fontWeight: \"600\",\n                        textAlign: \"center\",\n                        marginTop: 15\n                    }} \n                    value={tokenOneInput} \n                    onChange={(e) => firstLoad ? onChanged(e.nativeEvent.text) : null}  \n                    keyboardType=\"numeric\"\n                    maxLength={10}                                                         \n                />\n            </View>\n            <View style={{\n                backgroundColor: \"white\",\n                shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.25,\n                shadowRadius: 3.84,\n                elevation: 5,\n                width: 300,\n                borderBottomRightRadius: 15,\n                borderBottomLeftRadius: 15,\n                height: 180,\n                marginTop: 4,\n                display: \"flex\",\n                justifyContent: \"center\"\n            }}>     \n                <TouchableOpacity \n                    style={{\n                        position: \"absolute\",\n                        width: 40,\n                        height: 40,\n                        borderRadius: 40,\n                        backgroundColor: \"rgb(43,101,237)\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        top: \"calc(-20px - 2px)\",\n                        left: \"calc(150px - 20px)\",\n\n                    }}\n                    onPress={() => {\n                        const temp = tokenOne;\n                        const quantityTemp = tokenOneInput;\n                        setTokenOne(tokenTwo);\n                        setTokenTwo(temp);\n                        setTokenOneInput(tokenTwoInput);\n                        setTokenTwoInput(quantityTemp);\n                    }}\n                >\n                    <Icon2 size={30} color={\"white\"} name=\"swap-vertical\" />\n                </TouchableOpacity>                      \n                <TouchableOpacity \n                    onPress={() => setOpenTokenTwo(true)}                    \n                    style={{\n                        textAlign: \"center\",\n                    }}\n                >\n                    <Text style={{\n                        fontSize: 20,\n                        fontWeight: \"500\",                        \n                    }}>\n                        {tokenTwo.name}\n                    </Text>\n                </TouchableOpacity>\n                <Text style={{textAlign: \"center\", fontSize: 12, color: \"rgb(43,101,237)\"}}>{ownedTokenTwo ? i2 == -1 ? `(${Number(ether).toFixed(4)})` : `(${ownedTokenTwo})` : \"\"}</Text>\n                <TextInput \n                    style={{\n                        outline: \"none\",\n                        fontSize: 35,\n                        fontWeight: \"600\",\n                        textAlign: \"center\",\n                        marginTop: 15\n                    }} \n                    editable={false}\n                    value={tokenTwoInput} \n                />\n            </View>\n            \n            <TouchableOpacity \n                style={{\n                    width: 300,\n                    height: 50,\n                    marginTop: 15,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    borderRadius: 15,\n                    backgroundColor: \"rgb(43,101,237)\",\n                    shadowColor: \"#000\",\n                    shadowOffset: {\n                        width: 0,\n                        height: 2,\n                    },\n                    shadowOpacity: 0.25,\n                    shadowRadius: 3.84,\n                    elevation: 5,\n                }}\n                onPress={async () => {\n                    if (!account) {\n                        setOpenModel(true);\n                    }\n\n                    if (tokenOne.address == \"CANTO\" && tokenTwo.address == \"0xd6307DBAdc6398308307f5E60f2544220B48ba94\") {\n                        setSwapping(true);\n                        await wrapEth(tokenOneInput);\n                        setSwapping(false);\n                        checkBalancesAgain();\n                        \n                    } else if (tokenOne.address == \"0xd6307DBAdc6398308307f5E60f2544220B48ba94\" && tokenTwo.address == \"CANTO\") {\n                        setSwapping(true);\n                        await unwrapEth(tokenOneInput);\n                        setSwapping(false);\n                        checkBalancesAgain();\n                    } else {\n                        if (tokenOne.address == \"CANTO\") {\n                            setSwapping(true);\n                            await singleSwapFromEth(tokenTwo.address, tokenOneInput, slippage * 100, deadline, 500);\n                            setSwapping(false);\n                            checkBalancesAgain();\n                        } else if (tokenTwo.address == \"CANTO\") {\n                            alert(\"Can't swap to native CANTO in the GUI for now...\")\n                        } else {\n                            setSwapping(true);\n                            await singleSwapToken(tokenOne.address, tokenTwo.address, tokenOneInput, slippage * 100, deadline, 500);\n                            setSwapping(false);\n                            checkBalancesAgain();\n                        }\n                    }\n                }}\n            >                \n            {\n                swapping ? <ActivityIndicator size=\"small\" color=\"white\" /> : <Text style={{color: \"white\", fontWeight: \"600\"}}>{account ? (tokenOne.address == \"CANTO\" && tokenTwo.address == \"0xd6307DBAdc6398308307f5E60f2544220B48ba94\") ? \"Wrap CANTO\" : (tokenOne.address == \"0xd6307DBAdc6398308307f5E60f2544220B48ba94\" && tokenTwo.address == \"CANTO\") ? \"Unwrap WCANTO\" : \"Swap\" : \"Connect Wallet\"}</Text>\n            }                \n            </TouchableOpacity>\n            \n            {\n                    openSettings && (\n                        <Token setOpenSettings={setOpenSettings} setSlippage={setSlippage} slippage={slippage} deadline={deadline} setDeadline={setDeadline} />\n                    )\n                }\n\n            {openToken && (\n                <SearchToken openToken={setOpenToken} tokens={setTokenOne} token={tokenOne.address.toLowerCase()} tokenData={tokenData} bannedAddresses={[tokenOne.address.toLowerCase(), tokenTwo.address.toLowerCase()]} />\n            )}\n            \n            {openTokenTwo && (\n                <SearchToken openToken={setOpenTokenTwo} tokens={setTokenTwo} token={tokenTwo.address.toLowerCase()} tokenData={tokenData} bannedAddresses={[tokenOne.address.toLowerCase(), tokenTwo.address.toLowerCase()]} />\n            )}\n\n        </View>\n    )\n}","import { View, Text } from \"react-native\";\nimport {useEffect, useState} from \"react\";\nimport { NavBar } from \"./NavBar\";\nimport { SwapSection } from \"./SwapSection\"\nimport { checkIfWalletConnected, connectWallet } from \"./appFeatures\";\n\nconst Home = () => {\n\n    const [openModel, setOpenModel] = useState(false);\n    const [openTokenBox, setOpenTokenBox] = useState(false);\n\n    return (\n        <View>\n            <NavBar openModel={openModel} setOpenModel={setOpenModel} setOpenTokenBox={setOpenTokenBox} openTokenBox={openTokenBox} current={0} />\n            <SwapSection accounts=\"hey\" tokenData=\"DATA\" openModel={openModel || openTokenBox} setOpenModel={setOpenModel} />\n        </View>\n    );\n};\n\nexport default Home;\n","import { useEffect, useState } from \"react\";\nimport { Token } from \"./Token\";\nimport { SearchToken } from \"./SearchToken\";\nimport { TouchableOpacity, View, Text, TextInput } from \"react-native\";\nimport Icon from \"react-native-vector-icons/AntDesign\";\nimport Icon2 from \"react-native-vector-icons/Ionicons\";\nimport Icon3 from \"react-native-vector-icons/Entypo\";\nimport { addLiquidityExternal } from \"./addLiquidity\";\n\nexport const PoolAdd = ({openModelTopBar, setClosePool, account, tokenData, createLiquidityAndPool}) => {\n\n    const [openModel, setOpenModel] = useState(false); // not used\n    const [openTokenModelOne, setOpenTokenModelOne] = useState(false);\n    const [openTokenModelTwo, setOpenTokenModelTwo] = useState(false);\n    const [active, setActive] = useState(1);\n    const [openFee, setOpenFee] = useState(false);\n    const [minPrice, setMinPrice] = useState(0);\n    const [maxPrice, setMaxPrice] = useState(0);\n    const [ownedTokenOne, setOwnedTokenOne] = useState(\"\");\n    const [ownedTokenTwo, setOwnedTokenTwo] = useState(\"\");    \n\n    const feePairs = [\n        {\n            fee: \"0.05%\",\n            info: \"Stable\",\n            number: \"0% select\",\n            feeSystem: 500\n        },\n        {\n            fee: \"0.3%\",\n            info: \"Standard\",\n            number: \"0% select\",\n            feeSystem: 3000\n        },\n        {\n            fee: \"1%\",\n            info: \"Volatile\",\n            number: \"0% select\",\n            feeSystem: 10000\n        }\n    ]\n\n    const minPriceRange = (text) => {\n        if (text == \"+\") {\n            setMinPrice(minPrice + 1);\n        } else if (text == \"-\") {\n            setMinPrice(minPrice - 1);\n        }\n    }\n\n    const maxPriceRange = (text) => {\n        if (text == \"+\") {\n            setMaxPrice(maxPrice + 1);\n        } else if (text == \"-\") {\n            setMaxPrice(maxPrice - 1);\n        }\n    }\n\n    const [fee, setFee] = useState(500);\n    const [slippage, setSlippage] = useState(0.25);\n    const [deadline, setDeadline] = useState(10);\n    const [tokenAmountOne, setTokenAmountOne] = useState(0);\n    const [tokenAmountTwo, setTokenAmountTwo] = useState(0);\n    const [tokenInputOne, setTokenInputOne] = useState(\"\");\n    const [tokenInputTwo, setTokenInputTwo] = useState(\"\");\n\n    const [tokenOne, setTokenOne] = useState({\n        name: \"WCANTO\",\n        image: \"\",\n        address: \"0xd6307DBAdc6398308307f5E60f2544220B48ba94\",        \n        balance: 0\n    })\n    const [tokenTwo, setTokenTwo] = useState({\n        name: \"NOTE\",\n        image: \"\",\n        address: \"0xB1F0b69976Cd7EA7e181E07827872738Ba1Eb7D3\",\n        balance: 0\n    })\n\n    useEffect(() => {                      \n        const checkBalances = () => {\n            if (tokenData.length == 3) {\n                var i1 = tokenData.findIndex(function(token) {\n                    return token.tokenAddress.toLowerCase() == tokenOne.address.toLowerCase();\n                });\n                var i2 = tokenData.findIndex(function(token) {\n                    return token.tokenAddress.toLowerCase() == tokenTwo.address.toLowerCase();\n                });\n                if (i1 != -1) {                    \n                    setOwnedTokenOne(Number(tokenData[i1].tokenBalance).toFixed(4));\n                } else {\n                    setOwnedTokenOne(Number(ether).toFixed(4));\n                }\n\n                if (i2 != -1) {\n                    setOwnedTokenTwo(Number(tokenData[i2].tokenBalance).toFixed(4));\n                } else {\n                    setOwnedTokenTwo(Number(ether).toFixed(4));\n                }\n            } else {                \n                setTimeout(checkBalances, 500);\n            }\n        }\n        \n        checkBalances();\n    }, [tokenOne.address, tokenTwo.address])\n\n    const onChanged = (text, setToken) => {\n        let newText = '';\n        let numbers = '0123456789.';\n        let gotPoint = false;\n    \n        for (var i=0; i < text.length; i++) {\n            if(numbers.indexOf(text[i]) > -1) {\n                if (!gotPoint || text[i] != \".\") {\n                    newText = newText + text[i];   \n                }\n                if (text[i] == \".\") {\n                    gotPoint = true;\n                }                                                                             \n            }\n        }\n        setToken(newText);\n    }\n\n\n    return (\n        <View style={{ height: \"calc(100vh - 47px - 15px)\", width: \"100vw\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", zIndex: openModelTopBar ? -1 : 1 }} >\n            <View style={{\n                width: 590,\n                maxWidth: \"calc(100vw - 30px)\",\n                shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 0,\n                },\n                shadowOpacity: 0.25,\n                shadowRadius: 3.84,\n                elevation: 5,\n\n                borderRadius: 15,\n                padding: 15,                \n            }}>\n                {/* top view */}\n                <View style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n                    <TouchableOpacity onPress={() => setClosePool(false)}>\n                        <Icon name=\"arrowleft\" size={25} color={\"black\"} />\n                    </TouchableOpacity>\n                    <Text style={{ fontSize: 20, fontWeight: \"600\" }}>Add liquidity</Text>\n                    <View style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }} >\n                        <TouchableOpacity style={{ marginRight: 10 }} onPress={() => {\n                            setActive(1);\n                            setFee(500);\n                            setSlippage(0.25);\n                            setDeadline(10);\n                            setTokenInputOne(\"\");\n                            setTokenInputTwo(\"\");\n                            setMinPrice(0);\n                            setMaxPrice(0);\n                        }}>\n                            <Text style={{ color: \"rgb(43,101,237)\" }}>clear all</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity onPress={() => setOpenModel(true)}>\n                            <Icon2 name=\"settings-outline\" size={25} color=\"black\" />\n                        </TouchableOpacity>\n                    </View>\n                </View>\n                <View style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n                    {/* left */}\n                    <View style={{ width: \"calc(50% - 10px)\" }} >\n                        <Text style={{ fontSize: 16, fontWeight: \"500\", marginBottom: 15, marginTop: 25 }} >Select pair</Text>\n                        <View style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                            <TouchableOpacity onPress={() => setOpenTokenModelOne(true)} style={{\n                                backgroundColor: \"rgb(43,101,237)\",\n                                borderRadius: 15,\n                                width: \"calc(50% - 7.5px)\",\n                                height: 40,\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\"\n                            }}>\n                                <Text style={{ color: \"white\", fontWeight: \"500\" }}>{tokenOne.name}</Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity onPress={() => setOpenTokenModelTwo(true)} style={{\n                                backgroundColor: \"rgb(43,101,237)\",\n                                borderRadius: 15,\n                                width: \"calc(50% - 7.5px)\",\n                                height: 40,\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\"\n                            }}>\n                                <Text style={{ color: \"white\", fontWeight: \"500\" }}>{tokenTwo.name}</Text>\n                            </TouchableOpacity>\n                        </View>\n                        <View style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            marginTop: 15,\n                            borderColor: \"rgb(43,101,237)\",\n                            borderWidth: 1,\n                            padding: 10,\n                            borderRadius: 15\n                        }} >\n                            <View>\n                                <Text style={{ fontSize: 16, fontWeight: \"500\" }} >Fee tier</Text>\n                                <Text>The % you will earn in fees</Text>\n                            </View>\n                            <TouchableOpacity\n                                onPress={() => {\n                                    if (openFee) {\n                                        setOpenFee(false)\n                                    } else {\n                                        setOpenFee(true)\n                                    }\n                                }}\n\n                                style={{\n                                    padding: 10,\n                                    borderRadius: 10,\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    backgroundColor: \"rgb(43,101,237)\"\n                                }}\n                            >\n                                <Text style={{ fontWeight: \"500\", color: \"white\" }} >{openFee ? \"Hide\" : \"Open\"}</Text>\n                            </TouchableOpacity>\n                        </View>\n                        <View style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", marginTop: 10 }}>\n                            {openFee &&\n\n                                feePairs.map((el, i) => {\n                                    return (\n                                        <TouchableOpacity \n                                            key={i + 1} \n                                            onPress={() => {\n                                                setActive(i + 1),\n                                                setFee(el.feeSystem)\n                                            }} \n                                            style={{\n                                                backgroundColor: active == i + 1 ? \"rgb(43,101,237)\" : \"none\",\n                                                borderRadius: 10,\n                                                padding: 10,\n                                                borderColor: active != i + 1 ? \"rgb(43,101,237)\" : \"none\",\n                                                borderWidth: active != i + 1 ? 1 : 0,\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\"\n                                            }}\n                                        >\n                                            <Text style={{ color: active == i + 1 ? \"white\" : \"black\" }}>{el.fee}</Text>\n                                            {/* <Text>{active == i + 1 ? <Text>\"bruk\"</Text> : null}</Text> */}\n                                            <Text style={{ marginTop: 2, color: active == i + 1 ? \"white\" : \"black\" }}>{el.info}</Text>\n                                            {/* <Text>{el.number}</Text> */}\n                                        </TouchableOpacity>\n                                    )\n                                })\n                            }\n                        </View>\n                        <View>\n                            <Text style={{ fontSize: 16, fontWeight: \"500\", marginVertical: 10 }}>Deposit amounts</Text>\n                            <View style={{ display: \"flex\", flexDirection: \"row\" }}>\n                                <TextInput value={tokenInputOne} onChange={(e) => onChanged(e.nativeEvent.text, setTokenInputOne)} placeholder={ownedTokenOne} placeholderTextColor={\"darkgray\"} style={{\n                                    paddingLeft: 10,\n                                    fontSize: 20,\n                                    borderColor: \"rgb(43,101,237)\",\n                                    borderWidth: 1,\n                                    borderRadius: 10,\n                                    height: 40,\n                                    fontWeight: \"300\",\n                                    width: \"100%\",                                    \n                                }} />\n                                <View style={{ height: 40, padding: 10, borderRadius: 10, backgroundColor: \"rgb(43,101,237)\", position: \"absolute\", right: 0 }} >\n                                    <Text style={{ color: \"white\" }}>{tokenOne.name}</Text>\n                                </View>\n                            </View>\n                            <View style={{ display: \"flex\", flexDirection: \"row\", marginTop: 5 }}>\n                                <TextInput value={tokenInputTwo} onChange={(e) => onChanged(e.nativeEvent.text, setTokenInputTwo)} placeholder={ownedTokenTwo} placeholderTextColor={\"darkgray\"} style={{\n                                    paddingLeft: 10,\n                                    fontSize: 20,\n                                    borderColor: \"rgb(43,101,237)\",\n                                    borderWidth: 1,\n                                    borderRadius: 10,\n                                    height: 40,\n                                    fontWeight: \"300\",\n                                    // width: \"100%\"\n                                }} />\n                                <View style={{ height: 40, padding: 10, borderRadius: 10, backgroundColor: \"rgb(43,101,237)\", position: \"absolute\", right: 0 }} >\n                                    <Text style={{ color: \"white\" }}>{tokenTwo.name}</Text>\n                                </View>\n                            </View>\n                        </View>\n                    </View>\n                    {/* right */}\n\n                    <View style={{ width: \"calc(50% - 10px)\" }} >\n                        <Text style={{ fontSize: 16, fontWeight: \"500\", marginVertical: 10 }}>Set price range</Text>\n                        {/* <Text>Current price : 0.2125 {tokenOne.name} per {tokenTwo.name}</Text> */}\n                        <Icon3 name={\"wallet\"} color={\"rgb(43,101,237)\"} size={80} style={{ textAlign: \"center\", marginVertical: 10 }} />                        \n                        <View style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }} >\n                            <View style={{\n                                width: \"calc(50% - 7.5px)\",\n                                borderRadius: 10,\n                                borderColor: \"rgb(43,101,237)\",\n                                borderWidth: 1,\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                display: \"flex\",\n                                marginTop: 10\n                            }}>\n                                <Text>Min price</Text>                                \n                                <TouchableOpacity style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: 5, width: \"calc(100% - 30px)\" }} onPress={(e) => minPriceRange(e.target.innerText)}>\n                                    <View style={{backgroundColor: \"rgb(43,101,237)\", paddingVertical: 5, paddingHorizontal: 10, borderRadius: 10}} ><Text style={{color: \"white\"}}>-</Text></View>\n                                        <Text>{minPrice}</Text>\n                                    <View style={{backgroundColor: \"rgb(43,101,237)\", paddingVertical: 5, paddingHorizontal: 10, borderRadius: 10}}><Text style={{color: \"white\"}}>+</Text></View>\n                                </TouchableOpacity>\n                                <Text style={{ fontSize: 12, marginTop: 4 }}>WCANTO / USDC</Text>\n                            </View>\n                            <View style={{\n                                width: \"calc(50% - 7.5px)\",\n                                borderRadius: 10,\n                                borderColor: \"rgb(43,101,237)\",\n                                borderWidth: 1,\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                display: \"flex\",                                \n                                marginTop: 10\n                            }}>\n                                <Text>Max price</Text>\n                                <TouchableOpacity style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: 5, width: \"calc(100% - 30px)\" }} onPress={(e) => maxPriceRange(e.target.innerText)}>\n                                    <View style={{backgroundColor: \"rgb(43,101,237)\", paddingVertical: 5, paddingHorizontal: 10, borderRadius: 10}} ><Text style={{color: \"white\"}}>-</Text></View>\n                                        <Text>{maxPrice}</Text>\n                                    <View style={{backgroundColor: \"rgb(43,101,237)\", paddingVertical: 5, paddingHorizontal: 10, borderRadius: 10}}><Text style={{color: \"white\"}}>+</Text></View>\n                                    {/* <TextInput keyboardType=\"number\" placeholder=\"0.000\" min=\"0.000\" step=\"0.001\" onChange={(e) => setMaxPrice(e.target.value)} /> */}\n                                </TouchableOpacity>\n                                <Text style={{ fontSize: 12, marginTop: 4 }}>WCANTO / USDC</Text>\n                            </View>\n                        </View>\n                        <TouchableOpacity \n                            onPress={() => {\n                                addLiquidityExternal(\n                                    tokenOne.address,\n                                    tokenTwo.address,\n                                    \"0x9B289151b006F51359e46b61587892989DE7A670\",\n                                    fee,\n                                    tokenInputOne,\n                                    tokenInputTwo\n                                )\n                            }} \n                            style={{ width: \"100%\", height: 50, borderRadius: 10, backgroundColor: \"rgb(43,101,237)\", marginTop: 10, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} >\n                            <Text style={{ color: \"white\", fontWeight: \"600\", fontSize: 16 }} >Add liquidity</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n\n                {\n                    openModel && (\n                        <Token setOpenSettings={setOpenModel} setSlippage={setSlippage} slippage={slippage} deadline={deadline} setDeadline={setDeadline} />\n                    )\n                }\n\n                {\n                    openTokenModelOne && (\n                        <SearchToken hideCanto={true} tokens={setTokenOne} tokenData={tokenData} openToken={setOpenTokenModelOne} token={tokenOne.address.toLowerCase()} bannedAddresses={[tokenOne.address.toLowerCase(), tokenTwo.address.toLowerCase()]} />\n                    )\n\n                \n                }\n\n                {\n                    openTokenModelTwo && (\n                        <SearchToken hideCanto={true} tokens={setTokenTwo} tokenData={tokenData} openToken={setOpenTokenModelTwo} token={tokenTwo.address.toLowerCase()} bannedAddresses={[tokenOne.address.toLowerCase(), tokenTwo.address.toLowerCase()]} />\n                    )\n                }\n            </View>\n        </View>\n    )\n}","import { useContext, useEffect, useState } from \"react\";\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator } from \"react-native\";\nimport Icon3 from \"react-native-vector-icons/Entypo\";\nimport { FACOTRY_ADDRESS, MAINNET_URL, NON_FUNGIBLE_MANAGER } from \"./constants\";\nimport { ethers } from \"ethers\";\nimport { checkIfWalletConnected } from \"./appFeatures\";\nimport NonfungiblePositionManager from \"@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json\";\nimport UniswapV3Factory from \"@uniswap/v3-core/artifacts/contracts/UniswapV3Factory.sol/UniswapV3Factory.json\";\nimport UniswapV3Pool from \"@uniswap/v3-core/artifacts/contracts/UniswapV3Pool.sol/UniswapV3Pool.json\"\nimport { SwapTokenContext } from \"./SwapContext\";\nimport { TickMath } from \"@uniswap/v3-sdk\"\n\nconst sqrtToPrice = (sqrt, decimals0, decimals1) => {\n    const numerator = sqrt ** 2;\n    const denominator = 2 ** 192;\n    let ratio = numerator / denominator;\n    const shiftDecimals = Math.pow(10, decimals0 - decimals1);\n    ratio = ratio * shiftDecimals;\n\n    return ratio;\n}\n\nconst InRange = () => {\n    return (\n        <View style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", padding: 5, backgroundColor: \"rgb(43,101,237)\", borderRadius: 8 }}>\n            <View style={{height: 10, width: 10, borderRadius: 10, backgroundColor: \"green\", marginRight: 5}} />\n            <Text style={{fontSize: 10, color: \"white\", fontWeight: \"600\"}}>in range</Text>\n        </View>\n    )\n}\n\nconst OutRange = () => {\n    return (\n        <View style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", padding: 5, backgroundColor: \"rgb(43,101,237)\", borderRadius: 8 }}>\n            <View style={{height: 10, width: 10, borderRadius: 10, backgroundColor: \"red\", marginRight: 5}} />\n            <Text style={{fontSize: 10, color: \"white\", fontWeight: \"600\"}}>out of range</Text>\n        </View>\n    )\n}\n\nexport const PoolConnect = ({ account, setClosePool, setOpenModel }) => {\n\n    const [loading, setLoading] = useState(false);\n    const [poolPositions, setPoolPositions] = useState({});\n    const { tokenData } = useContext(SwapTokenContext);\n\n    const fetchingData = async () => {\n        try {            \n            const userAccount = await checkIfWalletConnected();\n            const provider = new ethers.providers.JsonRpcProvider(MAINNET_URL);\n            \n\n            const manager = new ethers.Contract(\n                NON_FUNGIBLE_MANAGER,\n                NonfungiblePositionManager.abi,\n                provider,\n            );\n\n            const factory = new ethers.Contract(\n                FACOTRY_ADDRESS,\n                UniswapV3Factory.abi,\n                provider\n            );\n\n            const nftBalance = await manager.connect(provider).balanceOf(userAccount);\n\n            const positions = {}\n\n            setLoading(true);\n            for (let i = 0; i < Number(nftBalance.toString()); i++) {\n                const tokenId = await manager.connect(provider).tokenOfOwnerByIndex(userAccount, i);\n                const position = await manager.connect(provider).positions(tokenId);\n                const pool = await factory.connect(provider).getPool(position.token0, position.token1, position.fee);\n\n                const poolContract = new ethers.Contract(\n                    pool,\n                    UniswapV3Pool.abi,\n                    provider\n                );\n\n                const currentRate = await poolContract.connect(provider).slot0();\n                const up = position.tickUpper;\n                const low = position.tickLower;\n\n                const upPrice = sqrtToPrice(TickMath.getSqrtRatioAtTick(up), 18, 18);\n                const lowPrice = sqrtToPrice(TickMath.getSqrtRatioAtTick(low), 18, 18);\n                const currentPrice = sqrtToPrice(currentRate[0], 18, 18);                \n\n\n                poolPositions[i] = {\n                    token0: position.token0,\n                    token1: position.token1,\n                    fee: position.fee,\n                    liquidity: position.liquidity,\n                    minPrice: lowPrice,\n                    maxPrice: upPrice,\n                    currentPrice: currentPrice\n                }\n\n\n                setPoolPositions({\n                    ...poolPositions, [i]: {\n                        token0: position.token0,\n                        token1: position.token1,\n                        fee: position.fee,\n                        liquidity: position.liquidity,\n                        minPrice: lowPrice,\n                        maxPrice: upPrice,\n                        currentPrice: currentPrice\n                    }\n                })\n            }            \n            // setPoolPositions(positions);\n        } catch (err) {\n            console.log(\"error while fetching data\", err);\n        }\n        setLoading(false);\n    }\n\n    useEffect(() => {\n        fetchingData();\n    }, [])\n\n    return (\n        <View style={{ height: \"calc(100vh - 47px - 15px)\", width: \"100vw\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", zIndex: -1 }}>\n            <View\n                style={{\n                    width: 590,\n                    borderRadius: 15,\n                    padding: 15,\n                    shadowColor: \"#000\",\n                    shadowOffset: {\n                        width: 0,\n                        height: 0,\n                    },\n                    shadowOpacity: 0.25,\n                    shadowRadius: 3.84,\n                    elevation: 5,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\"\n                }}\n            >\n                <View style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\", width: \"100%\" }}>\n                    <Text style={{ fontSize: 20, fontWeight: \"600\" }}>Pool</Text>\n                    <TouchableOpacity\n                        style={{\n                            paddingHorizontal: 13,\n                            paddingVertical: 13,\n                            borderRadius: 15,\n                            backgroundColor: \"rgb(43,101,237)\"\n                        }}\n                        onPress={() => setClosePool(true)}\n                    >\n                        <Text style={{ color: \"white\" }}>+ New position</Text>\n                    </TouchableOpacity>\n                </View>\n\n                <Icon3 name={\"wallet\"} color={\"rgb(43,101,237)\"} size={80} style={{ textAlign: \"center\", marginTop: 20, marginBottom: 30 }} />\n                {\n                    // remove -1 for real ...\n                    Object.keys(poolPositions).length > 0 ? \n                    <View style={{width: \"100%\", display: \"flex\", flexDirection: \"row\", alignItems: \"center\", marginBottom: 10}} >\n                        <Text style={{ fontSize: 16, fontWeight: \"600\", textAlign: \"left\", marginLeft: 15 }}>Positions :</Text>             \n                        <Text style={{color: \"gray\", marginLeft: 10, fontWeight: \"600\", marginRight: 10}}>(found {Object.keys(poolPositions).length} pools for now)</Text>\n                        { loading ? <ActivityIndicator size={\"small\"} color={\"gray\"} /> : null}\n                    </View> :\n                        <Text style={{ marginBottom: account ? 30 : null }}>Your active positions will appear here.</Text>\n                }\n                \n                <ScrollView style={{ height: Object.keys(poolPositions).length >= 3 ? \"calc(3* 50px + 3*15px + 15px)\" : `calc(${Object.keys(poolPositions).length} * 50px + ${Object.keys(poolPositions).length} * 15px + 15px)`, width: \"100%\", paddingTop: 10 }}>\n                    {Object.keys(poolPositions).map((el, i) => {\n\n                        if (poolPositions[el].token1 == \"0xbb23B503C5f05F3Eb2668402e97Ab9181bA4AC60\") {\n                            return;\n                        }\n\n                        const ind = tokenData.findIndex(p => p.tokenAddress.toLowerCase() == poolPositions[el].token0.toLowerCase())\n                        const ind1 = tokenData.findIndex(p => p.tokenAddress.toLowerCase() == poolPositions[el].token1.toLowerCase())\n\n                        return (\n                            <View key={i} style={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                width: \"calc(100% - 30px)\",\n                                justifyContent: \"space-between\",\n                                marginLeft: 15,\n                                alignItems: \"center\",\n                                marginBottom: 15,\n                                height: 55,\n                                borderRadius: 15,\n                                padding: 15,\n                                shadowColor: \"#000\",\n                                shadowOffset: {\n                                    width: 0,\n                                    height: 0,\n                                },\n                                shadowOpacity: 0.25,\n                                shadowRadius: 3.84,\n                                elevation: 5,\n\n                            }} >\n                                <View style={{display:\"flex\", justifyContent: \"space-between\"}}>\n                                    <Text style={{ fontWeight: \"700\", marginRight: 30, marginBottom: 5 }}>{ind >= 0 ? tokenData[ind].symbol : null} / {ind1 >= 0 ? tokenData[ind1].symbol : poolPositions[el].token1}</Text>                                \n                                    <View style={{display:\"flex\", flexDirection:\"row\", alignItems: \"center\"}} >\n                                        <Text style={{fontSize: 12, color: \"gray\"}} >Min: </Text>\n                                        <Text style={{fontSize: 12}}>{Number(poolPositions[el].minPrice).toFixed(4)} {ind >= 0 ? tokenData[ind].symbol : null} per {ind1 >= 0 ? tokenData[ind1].symbol : poolPositions[el].token1} ↔</Text>\n                                        <Text style={{fontSize: 12, color: \"gray\"}}> Max :</Text>\n                                        <Text style={{fontSize: 12}}>{Number(poolPositions[el].maxPrice).toFixed(4)} {ind >= 0 ? tokenData[ind].symbol : null} per {ind1 >= 0 ? tokenData[ind1].symbol : poolPositions[el].token1}</Text>\n                                        {/* <Text>Min: {Number(poolPositions[el].minPrice).toFixed(4)} {ind >= 0 ? tokenData[ind].symbol : null} per {ind1 >= 0 ? tokenData[ind1].symbol : poolPositions[el].token1}  ↔ Max: {Number(poolPositions[el].maxPrice).toFixed(4)} {ind >= 0 ? tokenData[ind].symbol : null} per {ind1 >= 0 ? tokenData[ind1].symbol : poolPositions[el].token1}</Text>                                 */}\n                                    </View>\n                                </View>\n                                {poolPositions[el].minPrice <= poolPositions[el].currentPrice && poolPositions[el].maxPrice >= poolPositions[el].currentPrice? <InRange />: <OutRange />}\n                            </View>\n                        )\n                    })}\n\n                </ScrollView>\n                {account ? null : (\n                    <TouchableOpacity\n                        style={{\n                            borderRadius: 15,\n                            backgroundColor: \"rgb(43,101,237)\",\n                            padding: 15,\n                            marginTop: 15,\n                        }}\n                        onPress={() => setOpenModel(true)}\n                    >\n                        <Text style={{ color: \"white\" }}>Connect wallet</Text>\n                    </TouchableOpacity>\n                )}\n            </View>\n        </View>\n    )\n}","import {View, Text, useWindowDimensions} from \"react-native\";\nimport { NavBar } from \"./NavBar\";\nimport { useContext, useState } from \"react\";\n\nimport { PoolAdd } from \"./PoolAdd\"\nimport { PoolConnect } from \"./PoolConnect\"\nimport { SwapTokenContext } from \"./SwapContext\";\n\nexport const PoolsPage = () => {\n\n    const [openModel, setOpenModel] = useState(false);\n    const [openTokenBox, setOpenTokenBox] = useState(false);\n\n    const { account, createLiquidityAndPool, tokenData, getAllLiquidity, poolPositions  } = useContext(SwapTokenContext);\n\n    const [closePool, setClosePool] = useState(false);\n\n    const {width} = useWindowDimensions();\n\n    \n\n    return (\n        <View> \n            {width < 650 ? (\n                <View style={{height: \"calc(100vh - 80px)\", width: \"100vw\", display:\"flex\", justifyContent:\"center\", alignItems: \"center\"}} >\n                    <Text>Screen too small, not supported for now...</Text>\n                </View>\n            ): (\n                <View>\n                    <NavBar openModel={openModel} setOpenModel={setOpenModel} setOpenTokenBox={setOpenTokenBox} openTokenBox={openTokenBox} current={2} />            \n                    {closePool ? <PoolAdd \n                        account={account} \n                        setClosePool={setClosePool} \n                        tokenData={tokenData} \n                        openModelTopBar={openModel || openTokenBox} \n                        createLiquidityAndPool={createLiquidityAndPool}\n                    /> : <PoolConnect\n                        account={account} \n                        setClosePool={setClosePool}\n                        getAllLiquidity={getAllLiquidity}\n                        setOpenModel={setOpenModel}\n                        poolPositions={poolPositions}\n                    />}  \n                </View>                                       \n            )}  \n        </View>\n    )\n}","import { useEffect, useState } from \"react\";\nimport { View, Text, TextInput, Image, TouchableOpacity } from \"react-native\";\nimport { NavBar } from \"./NavBar\";\nimport { ethers } from \"ethers\";\nimport { MAINNET_URL } from \"./constants\";\nconst UniswapV3Pool = require(\"@uniswap/v3-core/artifacts/contracts/UniswapV3Pool.sol/UniswapV3Pool.json\")\n\nconst numberWithSpaces = (x) => {\n    var parts = x.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n    return parts.join(\".\");\n}\n\nexport const TokensPage = () => {\n\n    const [openModel, setOpenModel] = useState(false);\n    const [openTokenBox, setOpenTokenBox] = useState(false);\n    const [vol, setVol] = useState({\n        \"0x379a16dcBA59bb9bB8244C75e4E1FC8f554A720E\": {\n            volume: \"loading...\",\n            swaps: \"loading...\"\n        },\n        \"0xd6307DBAdc6398308307f5E60f2544220B48ba94\": {\n            volume: \"loading...\",\n            swaps: \"loading...\"\n        },\n        \"0xB1F0b69976Cd7EA7e181E07827872738Ba1Eb7D3\": {\n            volume: \"loading...\",\n            swaps: \"loading...\"\n        },\n    });\n\n    const [allTokenList, setAllTokenList] = useState([\n        {\n            number: 1,\n            id: \"canto\",\n            image: \"https://raw.githubusercontent.com/Canto-Network/list/main/logos/token-logos/token/canto.png\",\n            name: \"wCANTO\",\n            symbol: \"WCANTO\",\n            address: \"0xd6307DBAdc6398308307f5E60f2544220B48ba94\"\n        },\n        {\n            number: 2,\n            id: \"note\",\n            image: \"https://raw.githubusercontent.com/Canto-Network/list/main/logos/token-logos/token/note.svg\",\n            name: \"Note\",\n            symbol: \"NOTE\",\n            address: \"0xB1F0b69976Cd7EA7e181E07827872738Ba1Eb7D3\"\n        },\n        {\n            number: 3,\n            id: \"usd-coin\",\n            image: \"https://assets.coingecko.com/coins/images/6319/small/USD_Coin_icon.png?1547042389\",\n            name: \"Usdc\",\n            symbol: \"USDC\",\n            address: \"0x379a16dcBA59bb9bB8244C75e4E1FC8f554A720E\"\n        }\n    ])\n    const [copyAllTokenList, setCopyAllTokenList] = useState(allTokenList);\n    const [search, setSearch] = useState(\"\");\n    const [searchItem, setSearchItem] = useState(search);\n\n    const [prices, setPrices] = useState({});\n\n    useEffect(() => {\n        var obj = {};\n        for (let i = 0; i < allTokenList.length; i++) {\n            const el = allTokenList[i];\n            fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${el.id}&vs_currencies=usd`)\n                .then((data) => data.json())\n                .then(data => {\n                    const k = el.address;                    \n                    obj[k] = data[el.id].usd;\n                })\n        }\n        // console.log(obj);\n        setPrices(obj);\n    }, [])\n\n    useEffect(() => {\n        const main = async () => {\n\n            const provider = new ethers.providers.JsonRpcProvider(MAINNET_URL);\n\n            var volume = {\n                \"0xAf37e8525E6bb1ac8095ccDD07360a63a480DD3A\": {\n                    token0: \"0x379a16dcBA59bb9bB8244C75e4E1FC8f554A720E\",\n                    token1: \"0xd6307DBAdc6398308307f5E60f2544220B48ba94\",\n                    volume0: 0,\n                    volume1: 0,\n                    swaps: 0\n                },\n                \"0x9B289151b006F51359e46b61587892989DE7A670\": {\n                    token0: \"0x379a16dcBA59bb9bB8244C75e4E1FC8f554A720E\",\n                    token1: \"0xB1F0b69976Cd7EA7e181E07827872738Ba1Eb7D3\",\n                    volume0: 0,\n                    volume1: 0,\n                    swaps: 0\n                },\n                \"0xbFb490aC8f9B17d26106d66361C36Ee0BB0f691d\": {\n                    token0: \"0xB1F0b69976Cd7EA7e181E07827872738Ba1Eb7D3\",\n                    token1: \"0xd6307DBAdc6398308307f5E60f2544220B48ba94\",\n                    volume0: 0,\n                    volume1: 0,\n                    swaps: 0\n                },\n            };\n\n            const keys = Object.keys(volume);\n\n            for (let i = 0; i < keys.length; i++) {\n                const key = keys[i];\n\n                const contract = new ethers.Contract(\n                    key,\n                    UniswapV3Pool.abi,\n                    provider\n                );\n\n                let eventFilter = contract.filters.Swap();\n                let events = await contract.queryFilter(eventFilter, -9995, \"latest\");\n\n                for (let j = 0; j < events.length; j++) {\n                    const amount0 = ethers.utils.formatEther(events[j].args.amount0).toString();\n                    const amount1 = ethers.utils.formatEther(events[j].args.amount1).toString();\n\n                    volume[key][\"volume0\"] += Math.abs(amount0);\n                    volume[key][\"volume1\"] += Math.abs(amount1);\n                    volume[key][\"swaps\"] += 1\n                }\n            }\n\n            var volumes = {\n                \"0x379a16dcBA59bb9bB8244C75e4E1FC8f554A720E\": {\n                    volume: 0,\n                    swaps: 0\n                },\n                \"0xd6307DBAdc6398308307f5E60f2544220B48ba94\": {\n                    volume: 0,\n                    swaps: 0\n                },\n                \"0xB1F0b69976Cd7EA7e181E07827872738Ba1Eb7D3\": {\n                    volume: 0,\n                    swaps: 0\n                },\n            }\n\n            for (let i = 0; i < keys.length; i++) {\n                volumes[volume[keys[i]].token0].volume += volume[keys[i]].volume0;\n                volumes[volume[keys[i]].token1].volume += volume[keys[i]].volume1;\n                volumes[volume[keys[i]].token0].swaps += volume[keys[i]].swaps;\n                volumes[volume[keys[i]].token1].swaps += volume[keys[i]].swaps;\n\n            }\n\n            setVol(volumes);\n\n        }\n\n        main();\n    }, [])\n\n    const onHandleSearch = (value) => {\n\n        const filteredTokens = allTokenList.filter(({ name }) => name.toLocaleLowerCase().includes(value.toLowerCase()));\n\n        if (filteredTokens.length === 0) {\n            setAllTokenList(copyAllTokenList);\n        } else {\n            setAllTokenList(filteredTokens);\n        }\n    }\n\n    const onClearSearch = () => {\n        if (allTokenList.length && copyAllTokenList.length) {\n            setAllTokenList(copyAllTokenList);\n        }\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => setSearch(searchItem), 500);\n        return () => clearTimeout(timer);\n    }, [searchItem])\n\n    useEffect(() => {\n        if (search) {\n            onHandleSearch(search);\n        } else {\n            onClearSearch();\n        }\n    }, [search])\n\n    return (\n        <View>\n            <NavBar openModel={openModel} setOpenModel={setOpenModel} setOpenTokenBox={setOpenTokenBox} openTokenBox={openTokenBox} current={1} />\n            <View style={{ paddingHorizontal: 15 }}>\n                <Text style={{ fontWeight: \"600\", fontSize: 20, marginTop: 45, marginBottom: 15, color: \"rgb(43,101,237)\" }} >Top tokens on WaveSwap</Text>\n                <TextInput\n                    placeholder=\"Filter tokens...\"\n                    onChange={(e) => setSearchItem(e.target.value)}\n                    value={searchItem}\n                    style={{\n                        shadowColor: \"#000\",\n                        shadowOffset: {\n                            width: 0,\n                            height: 0,\n                        },\n                        shadowOpacity: 0.25,\n                        shadowRadius: 3.84,\n                        elevation: 5,\n\n                        borderColor: \"rgb(43,101,237)\",\n                        color: \"rgb(43,101,237)\",\n                        borderWidth: 1,\n                        borderRadius: 15,\n                        height: 50,\n                        paddingLeft: 15,\n                        maxWidth: \"calc(100vw - 30px)\",\n                        width: \"50vw\",\n                        minWidth: 300,\n                        outline: \"none\",\n                    }}\n                />\n            </View>\n            <View style={{\n                shadowColor: \"#000\",\n                shadowOffset: {\n                    width: 0,\n                    height: 2,\n                },\n                shadowOpacity: 0.37,\n                shadowRadius: 7.49,\n                elevation: 12,\n\n                marginHorizontal: 15,\n                borderRadius: 15,\n                marginTop: 20\n            }}>\n                <View style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    paddingVertical: 25,\n                    borderTopLeftRadius: 10,\n                    borderTopRightRadius: 10,\n                    borderBottomColor: \"lightgray\",\n                    borderBottomWidth: 1\n                }} >\n                    <Text style={{ width: \"5%\", paddingLeft: 15, fontWeight: \"700\", fontSize: 15 }}>#</Text>\n                    <Text style={{ width: \"calc(25% + 30px + 25px)\", paddingLeft: 15, fontWeight: \"700\", fontSize: 15 }}>Symbol</Text>\n                    <Text style={{ width: \"25%\", fontWeight: \"700\", fontSize: 15 }}>Price</Text>\n                    <Text style={{ width: \"20%\", fontWeight: \"700\", fontSize: 15 }}>swaps</Text>\n                    <Text style={{ width: \"25%\", fontWeight: \"700\", fontSize: 15 }}>Volume (24h)</Text>\n                </View>\n                \n                {allTokenList.map((el, i) => {\n                    return (\n                        <View\n                            key={i}\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                            }}\n                        >\n                            <Text style={{ width: \"5%\", paddingLeft: 15, borderBottomLeftRadius: i == 4 ? 10 : 0, paddingVertical: 25 }}>{i + 1}</Text>\n                            <Image source={el.image} style={{ height: 30, width: 30, marginLeft: 15, marginRight: 10 }} />\n                            <Text style={{ width: \"25%\", fontWeight: \"700\" }}>{el.symbol}</Text>\n                            <Text style={{ width: \"25%\", fontWeight: \"700\" }}>{prices[el.address]} $</Text>\n                            <Text style={{ width: \"20%\" }}>{vol[el.address].swaps}</Text>\n                            <Text style={{ width: \"25%\" }}>{numberWithSpaces(Number(vol[el.address].volume * prices[el.address]).toFixed(2))} $</Text>\n                        </View>\n                    )\n                })}\n            </View>\n        </View>\n    )\n}","import Home from \"./src/Home\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { PoolsPage } from \"./src/PoolsPage\";\nimport { TokensPage } from \"./src/TokensPage\";\nimport { SwapTokenContextProvider } from \"./src/SwapContext\";\n\nconst Stack = createNativeStackNavigator();\n\nconst App = () => {\n  return (\n    <SwapTokenContextProvider>\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Swap\" component={Home} options={{ headerShown: false }} />\n          <Stack.Screen name=\"Tokens\" component={TokensPage} options={{ headerShown: false }} />\n          <Stack.Screen name=\"Pools\" component={PoolsPage} options={{ headerShown: false }} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SwapTokenContextProvider>\n  );\n};\n\nexport default App;\n\n// [ ] - if wrong network tell user (7700)\n// [ ] - local icons (to avoid loading time)\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [626], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["checkIfWalletConnected","_ref","_asyncToGenerator","window","ethereum","request","method","console","log","err","apply","arguments","connectWallet","_ref2","firstAccount","networkVersion","alert","location","reload","Model","setOpenModel","a","_jsx","View","style","position","display","justifyContent","alignItems","width","height","padding","top","left","backgroundColor","children","_jsxs","borderRadius","flexDirection","Text","fontSize","fontWeight","marginBottom","TouchableOpacity","onPress","Icon","name","size","color","map","el","i","paddingVertical","marginTop","textAlign","TokenList","tokenData","setOpenTokenBox","right","marginRight","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","minWidth","symbol","marginHorizontal","Number","tokenBalance","toFixed","MAINNET_URL","SWAP_ROUTER_ADDRESS","FACOTRY_ADDRESS","NON_FUNGIBLE_MANAGER","WCANTO_ADDRESS","QuoterV2ABI","require","abi","getOut","tokenA","tokenB","fee","amountIn","provider","ethers","quoter","Contract","params","tokenIn","tokenOut","sqrtPriceLimitX96","callStatic","quoteExactInputSingle","amountOut","_x","_x2","_x3","_x4","artifacts","NonfungiblePositionManager","WETH9","UniswapV3Pool","getPoolData","poolContract","_yield$Promise$all","Promise","all","tickSpacing","liquidity","slot0","_yield$Promise$all2","_slicedToArray","sqrtPriceX96","tick","addLiquidityExternal","tokenAddress1","tokenAddress2","poolAddress","poolFee","tokenAmount1","tokenAmount2","web3modal","Web3Modal","connection","connect","signer","getSigner","accountAddress","getAddress","token1Contract","token2Contract","approve","toString","chainId","getNetwork","token1Name","token1Symbol","token1Decimal","decimals","token1Address","address","token2Name","token2Symbol","token2Decimal","token2Address","Token","poolData","pool","Pool","_position$mintAmounts","Position","tickLower","nearestUsableTick","tickUpper","mintAmounts","amount0Desired","amount0","amount1Desired","amount1","token0","token1","amount0Min","amount1Min","recipient","deadline","Math","floor","Date","now","nonfungiblePositionManager","tx","mint","gasLimit","receipt","wait","_x5","_x6","_x7","bn","EXPONENTIAL_AT","DECIMAL_PLACES","UniswapV3Factory","SwapTokenContext","address1","address2","tokenFee1","tokenFee2","signerOrProvider","reserve1","reserve0","createPoolContract","price","div","sqrt","multipliedBy","pow","integerValue","transaction","createAndInitializePoolIfNecessary","factory","fetchPoolContract","getPool","createContext","SwapTokenContextProvider","_useState","useState","_useState2","account","setAccount","_useState3","_useState4","ether","setEther","_useState5","_useState6","networkConnect","setNetworkConnect","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","addToken","checkBalances","userAccount","balance","getBalance","_ref3","contract","ERC20","userBalance","balanceOf","convertTokenBal","index","findIndex","p","tokenAddress","toLowerCase","fetchingData","_ref4","network","_ref5","push","wrapEth","_ref6","amount","weth","deposit","value","transactionHash","unwrapEth","_ref7","withdraw","singleSwapFromEth","_ref8","token2","swapAmount","slippage","swaprouter","SwapRouter","out","b","c","subUnsafe","divUnsafe","d","mul","amountOutMinimum","data","interface","encodeFunctionData","txArgs","to","from","sendTransaction","reciept","_x8","_x9","_x10","_x11","singleSwapToken","_ref9","token","approvalResp","exactInputSingle","_x12","_x13","_x14","_x15","_x16","_x17","useEffect","Provider","NavBar","openModel","openTokenBox","current","navigation","useNavigation","_useContext","useContext","Dimensions","paddingHorizontal","borderColor","borderWidth","transform","link","navigate","String","substring","slice","setOpenSettings","setSlippage","setDeadline","onChanged","text","setToken","newText","numbers","gotPoint","length","indexOf","TextInput","onChange","e","nativeEvent","paddingLeft","marginLeft","paddingRight","SearchToken","openToken","tokens","bannedAddresses","_ref$hideCanto","hideCanto","allTokens","setAllTokens","concat","outline","placeholder","disabled","includes","image","SwapSection","openSettings","setOpenToken","openTokenTwo","setOpenTokenTwo","firstLoad","setFirstLoad","_useState13","_useState14","swapping","setSwapping","getPrice","_useState15","_useState16","tokenOne","setTokenOne","_useState17","_useState18","tokenTwo","setTokenTwo","_useState19","_useState20","tokenOneInput","setTokenOneInput","_useState21","_useState22","tokenTwoInput","setTokenTwoInput","_useState23","_useState24","ownedTokenOne","setOwnedTokenOne","_useState25","_useState26","ownedTokenTwo","setOwnedTokenTwo","_useState27","_useState28","i1","setI1","_useState29","_useState30","i2","setI2","getNewPrice","i1_","i2_","setTimeout","checkBalancesAgain","timer","clearTimeout","zIndex","Image","source","aspectRatio","borderTopRightRadius","borderTopLeftRadius","keyboardType","maxLength","borderBottomRightRadius","borderBottomLeftRadius","temp","quantityTemp","Icon2","editable","ActivityIndicator","accounts","PoolAdd","openModelTopBar","setClosePool","createLiquidityAndPool","openTokenModelOne","setOpenTokenModelOne","openTokenModelTwo","setOpenTokenModelTwo","active","setActive","openFee","setOpenFee","minPrice","setMinPrice","maxPrice","setMaxPrice","setFee","tokenInputOne","setTokenInputOne","_useState31","_useState32","tokenInputTwo","setTokenInputTwo","_useState33","_useState34","_useState35","_useState36","maxWidth","info","number","feeSystem","marginVertical","placeholderTextColor","Icon3","target","innerText","sqrtToPrice","decimals0","decimals1","ratio","InRange","OutRange","PoolConnect","loading","setLoading","poolPositions","setPoolPositions","manager","nftBalance","tokenId","tokenOfOwnerByIndex","positions","currentRate","up","low","upPrice","TickMath","lowPrice","currentPrice","_objectSpread","_defineProperty","Object","keys","ScrollView","paddingTop","ind","ind1","PoolsPage","getAllLiquidity","closePool","useWindowDimensions","numberWithSpaces","x","parts","split","replace","join","TokensPage","volume","swaps","vol","setVol","id","allTokenList","setAllTokenList","copyAllTokenList","search","setSearch","searchItem","setSearchItem","prices","setPrices","obj","_loop","fetch","then","json","k","usd","main","volume0","volume1","key","eventFilter","filters","Swap","events","queryFilter","j","args","abs","volumes","filteredTokens","filter","toLocaleLowerCase","onHandleSearch","borderBottomColor","borderBottomWidth","Stack","createNativeStackNavigator","NavigationContainer","Navigator","Screen","component","Home","options","headerShown","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","n","getter","__esModule","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}